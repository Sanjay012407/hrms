{"ast":null,"code":"import _objectSpread from\"C:/Users/DELL/Desktop/hrms/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from\"react\";import{useNavigate}from\"react-router-dom\";import{useCertificates}from\"../context/CertificateContext\";import{useProfiles}from\"../context/ProfileContext\";import{getCertificatesForJobRole,getAllJobRoles,allCertificates}from\"../data/certificateJobRoleMapping\";import SearchableDropdown from\"../components/SearchableDropdown\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function CreateCertificate(){const navigate=useNavigate();const{addCertificate}=useCertificates();const{profiles}=useProfiles();const[form,setForm]=useState({profile:\"\",certificateName:\"\",account:\"\",description:\"\",issueDate:\"2025-09-06\",expiryDate:\"2026-09-07\",approvalStatus:\"Approved\",isInterim:\"False\",fileRequired:\"True\",timeLoggedDays:\"\",timeLoggedHours:\"\",timeLoggedMinutes:\"\",supplier:\"\",totalCost:\"\",certificateFile:null});const[selectedProfile,setSelectedProfile]=useState(null);const[suppliers,setSuppliers]=useState([]);const[certificateNames,setCertificateNames]=useState([]);// Load suppliers and certificate names on component mount\nuseEffect(()=>{fetchSuppliers();fetchCertificateNames();initializeCertificateNames();},[]);const getApiUrl=()=>{var _process$env$REACT_AP;// In development, use localhost URL\nif(process.env.NODE_ENV==='development'&&process.env.REACT_APP_API_URL){return process.env.REACT_APP_API_URL;}// In production or when API_BASE_URL is relative, use relative path\nif((_process$env$REACT_AP=process.env.REACT_APP_API_BASE_URL)!==null&&_process$env$REACT_AP!==void 0&&_process$env$REACT_AP.startsWith('/')){return'';}// Fallback to localhost for development\nreturn process.env.REACT_APP_API_URL||'http://localhost:5003';};const fetchSuppliers=async()=>{try{const response=await fetch(\"\".concat(getApiUrl(),\"/api/suppliers\"));if(response.ok){const data=await response.json();setSuppliers(data);}else{console.error('Failed to fetch suppliers:',response.status,response.statusText);}}catch(error){console.error('Error fetching suppliers:',error);}};const fetchCertificateNames=async()=>{try{const response=await fetch(\"\".concat(getApiUrl(),\"/api/certificate-names\"));if(response.ok){const data=await response.json();setCertificateNames(data);}}catch(error){console.error('Error fetching certificate names:',error);}};const initializeCertificateNames=async()=>{try{await fetch(\"\".concat(getApiUrl(),\"/api/certificate-names/initialize\"),{method:'POST',headers:{'Content-Type':'application/json'}});}catch(error){console.error('Error initializing certificate names:',error);}};const handleSupplierSearch=async searchTerm=>{try{const baseUrl=getApiUrl();const response=await fetch(\"\".concat(baseUrl,\"/api/suppliers/search?q=\").concat(encodeURIComponent(searchTerm)));if(response.ok){const data=await response.json();setSuppliers(data);}else{console.error('Failed to search suppliers:',response.status,response.statusText);}}catch(error){console.error('Error searching suppliers:',error);}};const handleAddSupplier=async supplierName=>{try{const baseUrl=getApiUrl();const response=await fetch(\"\".concat(baseUrl,\"/api/suppliers\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name:supplierName})});if(response.ok){const newSupplier=await response.json();console.log('New supplier added:',newSupplier);// Update suppliers list\nfetchSuppliers();// Update form\nsetForm(prev=>_objectSpread(_objectSpread({},prev),{},{supplier:supplierName}));}else{console.error('Failed to add supplier:',response.status,response.statusText);}}catch(error){console.error('Error adding supplier:',error);}};const handleCertificateNameSearch=async searchTerm=>{try{const baseUrl=getApiUrl();const response=await fetch(\"\".concat(baseUrl,\"/api/certificate-names/search?q=\").concat(encodeURIComponent(searchTerm)));if(response.ok){const data=await response.json();setCertificateNames(data);}else{console.error('Failed to search certificate names:',response.status,response.statusText);}}catch(error){console.error('Error searching certificate names:',error);}};const handleAddCertificateName=async certificateName=>{try{const baseUrl=getApiUrl();const response=await fetch(\"\".concat(baseUrl,\"/api/certificate-names\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name:certificateName})});if(response.ok){const newCertificateName=await response.json();console.log('New certificate name added:',newCertificateName);// Update certificate names list\nfetchCertificateNames();// Update form\nsetForm(prev=>_objectSpread(_objectSpread({},prev),{},{certificateName:certificateName}));}else{console.error('Failed to add certificate name:',response.status,response.statusText);}}catch(error){console.error('Error adding certificate name:',error);}};const handleChange=e=>{const{name,value}=e.target;setForm(_objectSpread(_objectSpread({},form),{},{[name]:value}));// Handle profile selection change\nif(name==='profile'){const profile=profiles.find(p=>\"\".concat(p.firstName,\" \").concat(p.lastName)===value);setSelectedProfile(profile);// Reset certificate selection when profile changes\nsetForm(prev=>_objectSpread(_objectSpread({},prev),{},{certificateName:\"\"}));}};const handleFileChange=e=>{const file=e.target.files[0];if(file){// Check file size (10MB limit)\nif(file.size>10*1024*1024){alert('File size exceeds 10MB limit. Please select a smaller file.');e.target.value='';return;}// Check file type\nif(file.type==='application/pdf'||file.type==='image/jpeg'||file.type==='image/png'||file.type==='image/jpg'){setForm(_objectSpread(_objectSpread({},form),{},{certificateFile:file}));}else{alert('Please select a PDF, JPEG, or PNG file only.');e.target.value='';}}};const handleSubmit=e=>{e.preventDefault();// Validate required fields\nif(!form.profile){alert('Please select a profile');return;}if(!form.certificateName){alert('Please select or enter a certificate name');return;}// Transform form data to match certificate structure\nconst newCertificate={// Required fields for backend validation\ncertificate:form.certificateName||\"New Certificate\",category:\"Other\",// Other fields\ndescription:form.description||\"\",account:form.account||\"\",issueDate:new Date(form.issueDate).toLocaleDateString('en-GB'),expiryDate:new Date(form.expiryDate).toLocaleDateString('en-GB'),profileName:form.profile||\"Unknown Profile\",provider:form.supplier||\"SKILLS PROVIDER\",fileRequired:form.fileRequired===\"True\"?\"Yes\":\"No\",status:form.approvalStatus||\"Approved\",cost:form.totalCost||\"0.00\",jobRole:selectedProfile?selectedProfile.jobTitle:\"Unknown\",approvalStatus:form.approvalStatus||\"Approved\",isInterim:form.isInterim||\"False\",supplier:form.supplier||\"\",totalCost:form.totalCost||\"0.00\",certificateFile:form.certificateFile?form.certificateFile.name:null,fileData:form.certificateFile};// Add certificate to context\naddCertificate(newCertificate).then(()=>{alert('Certificate created successfully!');// Navigate to certificates page\nnavigate(\"/reporting/certificates\");}).catch(error=>{console.error('Error creating certificate:',error);alert('Failed to create certificate. Please try again.');});};const handleCancel=()=>{navigate(-1);// go back one page\n// OR navigate(\"/certificates\"); // redirect to certificate list\n};return/*#__PURE__*/_jsx(\"div\",{className:\"flex\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 p-6\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-semibold mb-6\",children:\"Create Certificate\"}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full max-w-6xl mx-auto bg-white shadow-md rounded-2xl p-6\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"space-y-5\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{className:\"block font-medium mb-1\",children:[\"Profile \",/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500\",children:\"*\"})]}),/*#__PURE__*/_jsxs(\"select\",{name:\"profile\",value:form.profile,onChange:handleChange,className:\"w-full border rounded-lg p-2\",required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a profile...\"}),profiles.map(profile=>/*#__PURE__*/_jsxs(\"option\",{value:\"\".concat(profile.firstName,\" \").concat(profile.lastName),children:[profile.firstName,\" \",profile.lastName,\" - \",Array.isArray(profile.jobTitle)?profile.jobTitle.join(', '):profile.jobTitle||'N/A']},profile._id))]}),selectedProfile&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600 mt-1\",children:[\"Job Role: \",/*#__PURE__*/_jsx(\"strong\",{children:Array.isArray(selectedProfile.jobTitle)?selectedProfile.jobTitle.join(', '):selectedProfile.jobTitle||'N/A'})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{className:\"block font-medium mb-1\",children:[\"Certificate Name \",/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500\",children:\"*\"})]}),/*#__PURE__*/_jsx(SearchableDropdown,{name:\"certificateName\",value:form.certificateName,onChange:handleChange,options:certificateNames,placeholder:\"Type to search certificates or add new...\",onSearch:handleCertificateNameSearch,onAddNew:handleAddCertificateName,className:\"w-full\",required:true}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 mt-1\",children:\"You can type to search existing certificates or add a new one\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block font-medium mb-1\",children:\"Account\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"account\",placeholder:\"Please select a profile above to proceed\",value:form.account,onChange:handleChange,className:\"w-full border rounded-lg p-2\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block font-medium mb-1\",children:\"Description\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"description\",placeholder:\"Description (optional)\",value:form.description,onChange:handleChange,className:\"w-full border rounded-lg p-2\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block font-medium mb-1\",children:\"Issue Date\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"issueDate\",value:form.issueDate,onChange:handleChange,className:\"w-full border rounded-lg p-2\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block font-medium mb-1\",children:\"Expiry Date\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"expiryDate\",value:form.expiryDate,onChange:handleChange,className:\"w-full border rounded-lg p-2\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block font-medium mb-1\",children:\"Approval Status\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"approvalStatus\",value:form.approvalStatus,onChange:handleChange,className:\"w-full border rounded-lg p-2\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"Approved\",children:\"Approved\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Pending\",children:\"Pending\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Rejected\",children:\"Rejected\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block font-medium mb-1\",children:\"Is Interim\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"isInterim\",value:form.isInterim,onChange:handleChange,className:\"w-full border rounded-lg p-2\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"True\",children:\"True\"}),/*#__PURE__*/_jsx(\"option\",{value:\"False\",children:\"False\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block font-medium mb-1\",children:\"File Required\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"fileRequired\",value:form.fileRequired,onChange:handleChange,className:\"w-full border rounded-lg p-2\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"True\",children:\"True\"}),/*#__PURE__*/_jsx(\"option\",{value:\"False\",children:\"False\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block font-medium mb-1\",children:\"Supplier\"}),/*#__PURE__*/_jsx(SearchableDropdown,{name:\"supplier\",value:form.supplier,onChange:handleChange,options:suppliers,placeholder:\"Type to search suppliers or add new...\",onSearch:handleSupplierSearch,onAddNew:handleAddSupplier,className:\"w-full\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 mt-1\",children:\"You can type to search existing suppliers or add a new one\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block font-medium mb-1\",children:\"Total Cost\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"totalCost\",placeholder:\"Enter total cost of the certificate\",value:form.totalCost,onChange:handleChange,className:\"w-full border rounded-lg p-2\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block font-medium mb-1\",children:\"Upload Certificate File\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".pdf,.jpg,.jpeg,.png\",onChange:handleFileChange,className:\"w-full border rounded-lg p-2\"}),form.certificateFile&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-green-600 mt-1\",children:[\"Selected: \",form.certificateFile.name]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 mt-1\",children:\"Please upload the certificate in PDF, JPEG, or PNG format (max 10MB)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end space-x-4\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleCancel,className:\"border px-4 py-2 rounded text-gray-600 hover:bg-gray-100\",children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\",children:\"Save changes\"})]})]})})]})});}","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useCertificates","useProfiles","getCertificatesForJobRole","getAllJobRoles","allCertificates","SearchableDropdown","jsx","_jsx","jsxs","_jsxs","CreateCertificate","navigate","addCertificate","profiles","form","setForm","profile","certificateName","account","description","issueDate","expiryDate","approvalStatus","isInterim","fileRequired","timeLoggedDays","timeLoggedHours","timeLoggedMinutes","supplier","totalCost","certificateFile","selectedProfile","setSelectedProfile","suppliers","setSuppliers","certificateNames","setCertificateNames","fetchSuppliers","fetchCertificateNames","initializeCertificateNames","getApiUrl","_process$env$REACT_AP","process","env","NODE_ENV","REACT_APP_API_URL","REACT_APP_API_BASE_URL","startsWith","response","fetch","concat","ok","data","json","console","error","status","statusText","method","headers","handleSupplierSearch","searchTerm","baseUrl","encodeURIComponent","handleAddSupplier","supplierName","body","JSON","stringify","name","newSupplier","log","prev","_objectSpread","handleCertificateNameSearch","handleAddCertificateName","newCertificateName","handleChange","e","value","target","find","p","firstName","lastName","handleFileChange","file","files","size","alert","type","handleSubmit","preventDefault","newCertificate","certificate","category","Date","toLocaleDateString","profileName","provider","cost","jobRole","jobTitle","fileData","then","catch","handleCancel","className","children","onSubmit","onChange","required","map","Array","isArray","join","_id","options","placeholder","onSearch","onAddNew","accept","onClick"],"sources":["C:/Users/DELL/Desktop/hrms/frontend/src/pages/CreateCertificate.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useCertificates } from \"../context/CertificateContext\";\r\nimport { useProfiles } from \"../context/ProfileContext\";\r\nimport { getCertificatesForJobRole, getAllJobRoles, allCertificates } from \"../data/certificateJobRoleMapping\";\r\nimport SearchableDropdown from \"../components/SearchableDropdown\";\r\n\r\nexport default function CreateCertificate() {\r\n  const navigate = useNavigate();\r\n  const { addCertificate } = useCertificates();\r\n  const { profiles } = useProfiles();\r\n\r\n  const [form, setForm] = useState({\r\n    profile: \"\",\r\n    certificateName: \"\",\r\n    account: \"\",\r\n    description: \"\",\r\n    issueDate: \"2025-09-06\",\r\n    expiryDate: \"2026-09-07\",\r\n    approvalStatus: \"Approved\",\r\n    isInterim: \"False\",\r\n    fileRequired: \"True\",\r\n    timeLoggedDays: \"\",\r\n    timeLoggedHours: \"\",\r\n    timeLoggedMinutes: \"\",\r\n    supplier: \"\",\r\n    totalCost: \"\",\r\n    certificateFile: null\r\n  });\r\n\r\n  const [selectedProfile, setSelectedProfile] = useState(null);\r\n  const [suppliers, setSuppliers] = useState([]);\r\n  const [certificateNames, setCertificateNames] = useState([]);\r\n\r\n  // Load suppliers and certificate names on component mount\r\n  useEffect(() => {\r\n    fetchSuppliers();\r\n    fetchCertificateNames();\r\n    initializeCertificateNames();\r\n  }, []);\r\n\r\n  const getApiUrl = () => {\r\n    // In development, use localhost URL\r\n    if (process.env.NODE_ENV === 'development' && process.env.REACT_APP_API_URL) {\r\n      return process.env.REACT_APP_API_URL;\r\n    }\r\n    // In production or when API_BASE_URL is relative, use relative path\r\n    if (process.env.REACT_APP_API_BASE_URL?.startsWith('/')) {\r\n      return '';\r\n    }\r\n    // Fallback to localhost for development\r\n    return process.env.REACT_APP_API_URL || 'http://localhost:5003';\r\n  };\r\n\r\n  const fetchSuppliers = async () => {\r\n    try {\r\n      const response = await fetch(`${getApiUrl()}/api/suppliers`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setSuppliers(data);\r\n      } else {\r\n        console.error('Failed to fetch suppliers:', response.status, response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching suppliers:', error);\r\n    }\r\n  };\r\n\r\n  const fetchCertificateNames = async () => {\r\n    try {\r\n      const response = await fetch(`${getApiUrl()}/api/certificate-names`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setCertificateNames(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching certificate names:', error);\r\n    }\r\n  };\r\n\r\n  const initializeCertificateNames = async () => {\r\n    try {\r\n      await fetch(`${getApiUrl()}/api/certificate-names/initialize`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.error('Error initializing certificate names:', error);\r\n    }\r\n  };\r\n\r\n  const handleSupplierSearch = async (searchTerm) => {\r\n    try {\r\n      const baseUrl = getApiUrl();\r\n      const response = await fetch(`${baseUrl}/api/suppliers/search?q=${encodeURIComponent(searchTerm)}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setSuppliers(data);\r\n      } else {\r\n        console.error('Failed to search suppliers:', response.status, response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error searching suppliers:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddSupplier = async (supplierName) => {\r\n    try {\r\n      const baseUrl = getApiUrl();\r\n      const response = await fetch(`${baseUrl}/api/suppliers`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ name: supplierName }),\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const newSupplier = await response.json();\r\n        console.log('New supplier added:', newSupplier);\r\n        // Update suppliers list\r\n        fetchSuppliers();\r\n        // Update form\r\n        setForm(prev => ({ ...prev, supplier: supplierName }));\r\n      } else {\r\n        console.error('Failed to add supplier:', response.status, response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding supplier:', error);\r\n    }\r\n  };\r\n\r\n  const handleCertificateNameSearch = async (searchTerm) => {\r\n    try {\r\n      const baseUrl = getApiUrl();\r\n      const response = await fetch(`${baseUrl}/api/certificate-names/search?q=${encodeURIComponent(searchTerm)}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setCertificateNames(data);\r\n      } else {\r\n        console.error('Failed to search certificate names:', response.status, response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error searching certificate names:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddCertificateName = async (certificateName) => {\r\n    try {\r\n      const baseUrl = getApiUrl();\r\n      const response = await fetch(`${baseUrl}/api/certificate-names`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ name: certificateName }),\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const newCertificateName = await response.json();\r\n        console.log('New certificate name added:', newCertificateName);\r\n        // Update certificate names list\r\n        fetchCertificateNames();\r\n        // Update form\r\n        setForm(prev => ({ ...prev, certificateName: certificateName }));\r\n      } else {\r\n        console.error('Failed to add certificate name:', response.status, response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding certificate name:', error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setForm({ ...form, [name]: value });\r\n\r\n    // Handle profile selection change\r\n    if (name === 'profile') {\r\n      const profile = profiles.find(p => `${p.firstName} ${p.lastName}` === value);\r\n      setSelectedProfile(profile);\r\n      \r\n      // Reset certificate selection when profile changes\r\n      setForm(prev => ({ ...prev, certificateName: \"\" }));\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      // Check file size (10MB limit)\r\n      if (file.size > 10 * 1024 * 1024) {\r\n        alert('File size exceeds 10MB limit. Please select a smaller file.');\r\n        e.target.value = '';\r\n        return;\r\n      }\r\n      \r\n      // Check file type\r\n      if (file.type === 'application/pdf' || \r\n          file.type === 'image/jpeg' || \r\n          file.type === 'image/png' || \r\n          file.type === 'image/jpg') {\r\n        setForm({ ...form, certificateFile: file });\r\n      } else {\r\n        alert('Please select a PDF, JPEG, or PNG file only.');\r\n        e.target.value = '';\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Validate required fields\r\n    if (!form.profile) {\r\n      alert('Please select a profile');\r\n      return;\r\n    }\r\n    \r\n    if (!form.certificateName) {\r\n      alert('Please select or enter a certificate name');\r\n      return;\r\n    }\r\n    \r\n    // Transform form data to match certificate structure\r\n    const newCertificate = {\r\n      // Required fields for backend validation\r\n      certificate: form.certificateName || \"New Certificate\",\r\n      category: \"Other\",\r\n      \r\n      // Other fields\r\n      description: form.description || \"\",\r\n      account: form.account || \"\",\r\n      issueDate: new Date(form.issueDate).toLocaleDateString('en-GB'),\r\n      expiryDate: new Date(form.expiryDate).toLocaleDateString('en-GB'),\r\n      profileName: form.profile || \"Unknown Profile\",\r\n      provider: form.supplier || \"SKILLS PROVIDER\",\r\n      fileRequired: form.fileRequired === \"True\" ? \"Yes\" : \"No\",\r\n      status: form.approvalStatus || \"Approved\",\r\n      cost: form.totalCost || \"0.00\",\r\n      jobRole: selectedProfile ? selectedProfile.jobTitle : \"Unknown\",\r\n      approvalStatus: form.approvalStatus || \"Approved\",\r\n      isInterim: form.isInterim || \"False\",\r\n      \r\n      supplier: form.supplier || \"\",\r\n      totalCost: form.totalCost || \"0.00\",\r\n      certificateFile: form.certificateFile ? form.certificateFile.name : null,\r\n      fileData: form.certificateFile\r\n    };\r\n\r\n    // Add certificate to context\r\n    addCertificate(newCertificate)\r\n      .then(() => {\r\n        alert('Certificate created successfully!');\r\n        // Navigate to certificates page\r\n        navigate(\"/reporting/certificates\");\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error creating certificate:', error);\r\n        alert('Failed to create certificate. Please try again.');\r\n      });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    navigate(-1); // go back one page\r\n    // OR navigate(\"/certificates\"); // redirect to certificate list\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex\">\r\n      {/* Main content */}\r\n      <div className=\"flex-1 p-6\">\r\n        <h1 className=\"text-2xl font-semibold mb-6\">Create Certificate</h1>\r\n\r\n<div className=\"w-full max-w-6xl mx-auto bg-white shadow-md rounded-2xl p-6\">\r\n          <form onSubmit={handleSubmit} className=\"space-y-5\">\r\n            {/* Profile */}\r\n           {/* Profile Selection */}\r\n          <div>\r\n            <label className=\"block font-medium mb-1\">Profile <span className=\"text-red-500\">*</span></label>\r\n            <select\r\n              name=\"profile\"\r\n              value={form.profile}\r\n              onChange={handleChange}\r\n              className=\"w-full border rounded-lg p-2\"\r\n              required\r\n            >\r\n              <option value=\"\">Select a profile...</option>\r\n              {profiles.map((profile) => (\r\n                <option key={profile._id} value={`${profile.firstName} ${profile.lastName}`}>\r\n                  {profile.firstName} {profile.lastName} - {Array.isArray(profile.jobTitle) \r\n                    ? profile.jobTitle.join(', ') \r\n                    : (profile.jobTitle || 'N/A')\r\n                  }\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {selectedProfile && (\r\n              <p className=\"text-sm text-gray-600 mt-1\">\r\n                Job Role: <strong>{Array.isArray(selectedProfile.jobTitle) \r\n                  ? selectedProfile.jobTitle.join(', ') \r\n                  : (selectedProfile.jobTitle || 'N/A')\r\n                }</strong>\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Certificate Name */}\r\n          <div>\r\n            <label className=\"block font-medium mb-1\">Certificate Name <span className=\"text-red-500\">*</span></label>\r\n            <SearchableDropdown\r\n              name=\"certificateName\"\r\n              value={form.certificateName}\r\n              onChange={handleChange}\r\n              options={certificateNames}\r\n              placeholder=\"Type to search certificates or add new...\"\r\n              onSearch={handleCertificateNameSearch}\r\n              onAddNew={handleAddCertificateName}\r\n              className=\"w-full\"\r\n              required\r\n            />\r\n            <p className=\"text-xs text-gray-500 mt-1\">\r\n              You can type to search existing certificates or add a new one\r\n            </p>\r\n          </div>\r\n\r\n            {/* Account */}\r\n            <div>\r\n              <label className=\"block font-medium mb-1\">Account</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"account\"\r\n                placeholder=\"Please select a profile above to proceed\"\r\n                value={form.account}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded-lg p-2\"\r\n              />\r\n            </div>\r\n\r\n            {/* Description */}\r\n            <div>\r\n              <label className=\"block font-medium mb-1\">Description</label>\r\n              <textarea\r\n                name=\"description\"\r\n                placeholder=\"Description (optional)\"\r\n                value={form.description}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded-lg p-2\"\r\n              />\r\n            </div>\r\n\r\n            {/* Dates */}\r\n            <div className=\"grid grid-cols-2 gap-6\">\r\n              <div>\r\n                <label className=\"block font-medium mb-1\">Issue Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"issueDate\"\r\n                  value={form.issueDate}\r\n                  onChange={handleChange}\r\n                  className=\"w-full border rounded-lg p-2\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block font-medium mb-1\">Expiry Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"expiryDate\"\r\n                  value={form.expiryDate}\r\n                  onChange={handleChange}\r\n                  className=\"w-full border rounded-lg p-2\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Approval Status */}\r\n            <div>\r\n              <label className=\"block font-medium mb-1\">Approval Status</label>\r\n              <select\r\n                name=\"approvalStatus\"\r\n                value={form.approvalStatus}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded-lg p-2\"\r\n              >\r\n                <option value=\"Approved\">Approved</option>\r\n                <option value=\"Pending\">Pending</option>\r\n                <option value=\"Rejected\">Rejected</option>\r\n              </select>\r\n            </div>\r\n\r\n            {/* Is Interim */}\r\n            <div>\r\n              <label className=\"block font-medium mb-1\">Is Interim</label>\r\n              <select\r\n                name=\"isInterim\"\r\n                value={form.isInterim}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded-lg p-2\"\r\n              >\r\n                <option value=\"True\">True</option>\r\n                <option value=\"False\">False</option>\r\n              </select>\r\n            </div>\r\n\r\n            {/* File Required */}\r\n            <div>\r\n              <label className=\"block font-medium mb-1\">File Required</label>\r\n              <select\r\n                name=\"fileRequired\"\r\n                value={form.fileRequired}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded-lg p-2\"\r\n              >\r\n                <option value=\"True\">True</option>\r\n                <option value=\"False\">False</option>\r\n              </select>\r\n            </div>\r\n\r\n            {/* Supplier */}\r\n            <div>\r\n              <label className=\"block font-medium mb-1\">Supplier</label>\r\n              <SearchableDropdown\r\n                name=\"supplier\"\r\n                value={form.supplier}\r\n                onChange={handleChange}\r\n                options={suppliers}\r\n                placeholder=\"Type to search suppliers or add new...\"\r\n                onSearch={handleSupplierSearch}\r\n                onAddNew={handleAddSupplier}\r\n                className=\"w-full\"\r\n              />\r\n              <p className=\"text-xs text-gray-500 mt-1\">\r\n                You can type to search existing suppliers or add a new one\r\n              </p>\r\n            </div>\r\n\r\n            {/* Total Cost */}\r\n            <div>\r\n              <label className=\"block font-medium mb-1\">Total Cost</label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"totalCost\"\r\n                placeholder=\"Enter total cost of the certificate\"\r\n                value={form.totalCost}\r\n                onChange={handleChange}\r\n                className=\"w-full border rounded-lg p-2\"\r\n              />\r\n            </div>\r\n\r\n            {/* Certificate PDF Upload */}\r\n            <div>\r\n              <label className=\"block font-medium mb-1\">Upload Certificate File</label>\r\n              <input\r\n                type=\"file\"\r\n                accept=\".pdf,.jpg,.jpeg,.png\"\r\n                onChange={handleFileChange}\r\n                className=\"w-full border rounded-lg p-2\"\r\n              />\r\n              {form.certificateFile && (\r\n                <p className=\"text-sm text-green-600 mt-1\">\r\n                  Selected: {form.certificateFile.name}\r\n                </p>\r\n              )}\r\n              <p className=\"text-xs text-gray-500 mt-1\">\r\n                Please upload the certificate in PDF, JPEG, or PNG format (max 10MB)\r\n              </p>\r\n            </div>\r\n\r\n            {/* Buttons */}\r\n            <div className=\"flex justify-end space-x-4\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleCancel}\r\n                className=\"border px-4 py-2 rounded text-gray-600 hover:bg-gray-100\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\"\r\n              >\r\n                Save changes\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}