{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\hrm\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/AuthContext.js\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:5003/api\";\n\n// Configure axios to include credentials (cookies) with requests\naxios.defaults.withCredentials = true;\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check for existing session on app start\n  useEffect(() => {\n    validateSession();\n  }, []);\n  const validateSession = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get(`${API_BASE_URL}/auth/validate-session`);\n      if (response.data.isAuthenticated) {\n        setUser(response.data.user);\n        setIsAuthenticated(true);\n        // Keep token in localStorage for API compatibility\n        if (response.data.token) {\n          localStorage.setItem(\"authToken\", response.data.token);\n        }\n      } else {\n        setUser(null);\n        setIsAuthenticated(false);\n        localStorage.removeItem(\"authToken\");\n        localStorage.removeItem(\"userData\");\n      }\n    } catch (err) {\n      console.log(\"No active session found\");\n      setUser(null);\n      setIsAuthenticated(false);\n      localStorage.removeItem(\"authToken\");\n      localStorage.removeItem(\"userData\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password, rememberMe = false) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post(`${API_BASE_URL}/auth/login`, {\n        email,\n        password,\n        rememberMe\n      });\n      const {\n        token,\n        user: userData\n      } = response.data;\n\n      // Store token in localStorage for API compatibility\n      if (token) {\n        localStorage.setItem(\"authToken\", token);\n      }\n      localStorage.setItem(\"userData\", JSON.stringify(userData));\n\n      // Update state - session is automatically handled by cookies\n      setUser(userData);\n      setIsAuthenticated(true);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const errorMessage = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Login failed\";\n      setError(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const signup = async userData => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post(`${API_BASE_URL}/auth/signup`, userData);\n      return {\n        success: true,\n        message: \"Account created successfully\"\n      };\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      const errorMessage = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Signup failed\";\n      setError(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = async () => {\n    setLoading(true);\n    try {\n      // Call backend logout endpoint to destroy session\n      await axios.post(`${API_BASE_URL}/auth/logout`);\n    } catch (err) {\n      console.error(\"Logout error:\", err);\n    } finally {\n      // Clear local state and storage regardless of API call result\n      localStorage.removeItem(\"authToken\");\n      localStorage.removeItem(\"userData\");\n      setUser(null);\n      setIsAuthenticated(false);\n      setError(null);\n      setLoading(false);\n    }\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    error,\n    login,\n    signup,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"AaZCefjEQIISzggwPe9U62ieYJk=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","defaults","withCredentials","AuthProvider","children","_s2","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","error","setError","validateSession","response","get","data","token","localStorage","setItem","removeItem","err","console","log","login","email","password","rememberMe","post","userData","JSON","stringify","success","_err$response","_err$response$data","errorMessage","message","signup","_err$response2","_err$response2$data","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/hrm/frontend/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\r\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error(\"useAuth must be used within an AuthProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:5003/api\";\r\n\r\n// Configure axios to include credentials (cookies) with requests\r\naxios.defaults.withCredentials = true;\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Check for existing session on app start\r\n  useEffect(() => {\r\n    validateSession();\r\n  }, []);\r\n\r\n  const validateSession = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/auth/validate-session`);\r\n      \r\n      if (response.data.isAuthenticated) {\r\n        setUser(response.data.user);\r\n        setIsAuthenticated(true);\r\n        // Keep token in localStorage for API compatibility\r\n        if (response.data.token) {\r\n          localStorage.setItem(\"authToken\", response.data.token);\r\n        }\r\n      } else {\r\n        setUser(null);\r\n        setIsAuthenticated(false);\r\n        localStorage.removeItem(\"authToken\");\r\n        localStorage.removeItem(\"userData\");\r\n      }\r\n    } catch (err) {\r\n      console.log(\"No active session found\");\r\n      setUser(null);\r\n      setIsAuthenticated(false);\r\n      localStorage.removeItem(\"authToken\");\r\n      localStorage.removeItem(\"userData\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password, rememberMe = false) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/auth/login`, {\r\n        email,\r\n        password,\r\n        rememberMe\r\n      });\r\n      \r\n      const { token, user: userData } = response.data;\r\n      \r\n      // Store token in localStorage for API compatibility\r\n      if (token) {\r\n        localStorage.setItem(\"authToken\", token);\r\n      }\r\n      localStorage.setItem(\"userData\", JSON.stringify(userData));\r\n      \r\n      // Update state - session is automatically handled by cookies\r\n      setUser(userData);\r\n      setIsAuthenticated(true);\r\n      \r\n      return { success: true };\r\n    } catch (err) {\r\n      const errorMessage = err.response?.data?.message || \"Login failed\";\r\n      setError(errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const signup = async (userData) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/auth/signup`, userData);\r\n      \r\n      return { success: true, message: \"Account created successfully\" };\r\n    } catch (err) {\r\n      const errorMessage = err.response?.data?.message || \"Signup failed\";\r\n      setError(errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // Call backend logout endpoint to destroy session\r\n      await axios.post(`${API_BASE_URL}/auth/logout`);\r\n    } catch (err) {\r\n      console.error(\"Logout error:\", err);\r\n    } finally {\r\n      // Clear local state and storage regardless of API call result\r\n      localStorage.removeItem(\"authToken\");\r\n      localStorage.removeItem(\"userData\");\r\n      setUser(null);\r\n      setIsAuthenticated(false);\r\n      setError(null);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isAuthenticated,\r\n    loading,\r\n    error,\r\n    login,\r\n    signup,\r\n    logout\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}