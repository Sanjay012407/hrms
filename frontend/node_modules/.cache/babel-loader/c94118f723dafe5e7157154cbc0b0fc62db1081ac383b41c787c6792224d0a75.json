{"ast":null,"code":"// src/context/AuthContext.js\nimport React,{createContext,useContext,useState,useEffect}from\"react\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error(\"useAuth must be used within an AuthProvider\");}return context;};const getApiUrl=()=>{var _process$env$REACT_AP;// In development, use localhost URL\nif(process.env.NODE_ENV==='development'&&process.env.REACT_APP_API_URL){return process.env.REACT_APP_API_URL;}// In production or when API_BASE_URL is relative, use relative path\nif((_process$env$REACT_AP=process.env.REACT_APP_API_BASE_URL)!==null&&_process$env$REACT_AP!==void 0&&_process$env$REACT_AP.startsWith('/')){return'';}// Fallback to localhost for development\nreturn process.env.REACT_APP_API_URL||'http://localhost:5003';};const API_BASE_URL=\"\".concat(getApiUrl());// Configure axios to include credentials (cookies) with requests\naxios.defaults.withCredentials=true;export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[isAuthenticated,setIsAuthenticated]=useState(false);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);// Store session cookie for session maintenance\nconst storeSessionCookie=()=>{const cookies=document.cookie.split(';');const sessionCookie=cookies.find(cookie=>cookie.trim().startsWith('talentshield.sid='));if(sessionCookie){console.log('Session cookie captured:',sessionCookie);localStorage.setItem('sessionCookie',sessionCookie);}else{localStorage.removeItem('sessionCookie');}};// Check for existing session on app start\nuseEffect(()=>{checkExistingSession();},[]);const checkExistingSession=async()=>{try{// Check for stored user data first\nconst storedUser=localStorage.getItem('userData');if(storedUser){// Try to validate the session with the backend\ntry{const response=await axios.get(\"\".concat(API_BASE_URL,\"/api/auth/validate-session\"),{withCredentials:true,timeout:5000});if(response.data.isAuthenticated&&response.data.user){setUser(response.data.user);setIsAuthenticated(true);console.log('Session validated with backend');return;}}catch(error){console.log('Session validation failed, using stored data');}// Fallback to stored user data if backend validation fails\nconst userData=JSON.parse(storedUser);setUser(userData);setIsAuthenticated(true);console.log('Session restored from stored data');}else{// No stored user data, ensure clean state\nsetUser(null);setIsAuthenticated(false);}}catch(error){console.error('Error checking session:',error);handleInvalidSession();}};const login=async function(email,password){let rememberMe=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;setLoading(true);setError(null);try{const response=await axios.post(\"\".concat(API_BASE_URL,\"/api/auth/login\"),{email,password,rememberMe});const{token,user:userData}=response.data;// Store token in localStorage for API compatibility\nif(token){localStorage.setItem(\"authToken\",token);}localStorage.setItem(\"userData\",JSON.stringify(userData));// Update state - session is automatically handled by cookies\nsetUser(userData);setIsAuthenticated(true);return{success:true};}catch(err){var _err$response,_err$response$data;const errorMessage=((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||\"Login failed\";setError(errorMessage);return{success:false,error:errorMessage};}finally{setLoading(false);}};const signup=async userData=>{setLoading(true);setError(null);try{const response=await axios.post(\"\".concat(API_BASE_URL,\"/api/auth/signup\"),userData);return{success:true,message:\"Account created successfully\"};}catch(err){var _err$response2,_err$response2$data;const errorMessage=((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.message)||\"Signup failed\";setError(errorMessage);return{success:false,error:errorMessage};}finally{setLoading(false);}};const logout=async()=>{setLoading(true);try{// Call backend logout endpoint to destroy session\nawait axios.post(\"\".concat(API_BASE_URL,\"/api/auth/logout\"));}catch(err){console.error(\"Logout error:\",err);}finally{// Clear local state and storage regardless of API call result\nlocalStorage.removeItem(\"authToken\");localStorage.removeItem(\"userData\");localStorage.removeItem(\"sessionCookie\");setUser(null);setIsAuthenticated(false);setError(null);setLoading(false);}};const handleInvalidSession=()=>{console.log(\"Invalid session. Clearing user data.\");localStorage.removeItem(\"userData\");localStorage.removeItem(\"authToken\");localStorage.removeItem(\"sessionCookie\");setUser(null);setIsAuthenticated(false);};const value={user,isAuthenticated,loading,error,login,signup,logout,storeSessionCookie};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsx","_jsx","AuthContext","useAuth","context","Error","getApiUrl","_process$env$REACT_AP","process","env","NODE_ENV","REACT_APP_API_URL","REACT_APP_API_BASE_URL","startsWith","API_BASE_URL","concat","defaults","withCredentials","AuthProvider","_ref","children","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","error","setError","storeSessionCookie","cookies","document","cookie","split","sessionCookie","find","trim","console","log","localStorage","setItem","removeItem","checkExistingSession","storedUser","getItem","response","get","timeout","data","userData","JSON","parse","handleInvalidSession","login","email","password","rememberMe","arguments","length","undefined","post","token","stringify","success","err","_err$response","_err$response$data","errorMessage","message","signup","_err$response2","_err$response2$data","logout","value","Provider"],"sources":["/root/hrms/frontend/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n\nconst getApiUrl = () => {\n  // In development, use localhost URL\n  if (process.env.NODE_ENV === 'development' && process.env.REACT_APP_API_URL) {\n    return process.env.REACT_APP_API_URL;\n  }\n  // In production or when API_BASE_URL is relative, use relative path\n  if (process.env.REACT_APP_API_BASE_URL?.startsWith('/')) {\n    return '';\n  }\n  // Fallback to localhost for development\n  return process.env.REACT_APP_API_URL || 'http://localhost:5003';\n};\n\nconst API_BASE_URL = `${getApiUrl()}`;\n\n// Configure axios to include credentials (cookies) with requests\naxios.defaults.withCredentials = true;\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Store session cookie for session maintenance\n  const storeSessionCookie = () => {\n    const cookies = document.cookie.split(';');\n    const sessionCookie = cookies.find(cookie => cookie.trim().startsWith('talentshield.sid='));\n\n    if (sessionCookie) {\n      console.log('Session cookie captured:', sessionCookie);\n      localStorage.setItem('sessionCookie', sessionCookie);\n    } else {\n      localStorage.removeItem('sessionCookie');\n    }\n  };\n\n  // Check for existing session on app start\n  useEffect(() => {\n    checkExistingSession();\n  }, []);\n\n  const checkExistingSession = async () => {\n    try {\n      // Check for stored user data first\n      const storedUser = localStorage.getItem('userData');\n      \n      if (storedUser) {\n        // Try to validate the session with the backend\n        try {\n          const response = await axios.get(`${API_BASE_URL}/api/auth/validate-session`, {\n            withCredentials: true,\n            timeout: 5000\n          });\n          \n          if (response.data.isAuthenticated && response.data.user) {\n            setUser(response.data.user);\n            setIsAuthenticated(true);\n            console.log('Session validated with backend');\n            return;\n          }\n        } catch (error) {\n          console.log('Session validation failed, using stored data');\n        }\n        \n        // Fallback to stored user data if backend validation fails\n        const userData = JSON.parse(storedUser);\n        setUser(userData);\n        setIsAuthenticated(true);\n        console.log('Session restored from stored data');\n      } else {\n        // No stored user data, ensure clean state\n        setUser(null);\n        setIsAuthenticated(false);\n      }\n    } catch (error) {\n      console.error('Error checking session:', error);\n      handleInvalidSession();\n    }\n  };\n\n  const login = async (email, password, rememberMe = false) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/auth/login`, {\n        email,\n        password,\n        rememberMe\n      });\n\n      const { token, user: userData } = response.data;\n\n      // Store token in localStorage for API compatibility\n      if (token) {\n        localStorage.setItem(\"authToken\", token);\n      }\n      localStorage.setItem(\"userData\", JSON.stringify(userData));\n\n      // Update state - session is automatically handled by cookies\n      setUser(userData);\n      setIsAuthenticated(true);\n\n      return { success: true };\n    } catch (err) {\n      const errorMessage = err.response?.data?.message || \"Login failed\";\n      setError(errorMessage);\n      return { success: false, error: errorMessage };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const signup = async (userData) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/auth/signup`, userData);\n\n      return { success: true, message: \"Account created successfully\" };\n    } catch (err) {\n      const errorMessage = err.response?.data?.message || \"Signup failed\";\n      setError(errorMessage);\n      return { success: false, error: errorMessage };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = async () => {\n    setLoading(true);\n    try {\n      // Call backend logout endpoint to destroy session\n      await axios.post(`${API_BASE_URL}/api/auth/logout`);\n    } catch (err) {\n      console.error(\"Logout error:\", err);\n    } finally {\n      // Clear local state and storage regardless of API call result\n      localStorage.removeItem(\"authToken\");\n      localStorage.removeItem(\"userData\");\n      localStorage.removeItem(\"sessionCookie\");\n      setUser(null);\n      setIsAuthenticated(false);\n      setError(null);\n      setLoading(false);\n    }\n  };\n\n  const handleInvalidSession = () => {\n    console.log(\"Invalid session. Clearing user data.\");\n    localStorage.removeItem(\"userData\");\n    localStorage.removeItem(\"authToken\");\n    localStorage.removeItem(\"sessionCookie\");\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    error,\n    login,\n    signup,\n    logout,\n    storeSessionCookie\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}