{"ast":null,"code":"// src/context/AuthContext.js\nimport React,{createContext,useContext,useState,useEffect,useCallback}from\"react\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error(\"useAuth must be used within an AuthProvider\");}return context;};const getApiUrl=()=>{var _process$env$REACT_AP;// In development, use localhost URL\nif(process.env.NODE_ENV==='development'&&process.env.REACT_APP_API_URL){return process.env.REACT_APP_API_URL;}// In production or when API_BASE_URL is relative, use relative path\nif((_process$env$REACT_AP=process.env.REACT_APP_API_BASE_URL)!==null&&_process$env$REACT_AP!==void 0&&_process$env$REACT_AP.startsWith('/')){return'';}// Fallback to localhost for development\nreturn process.env.REACT_APP_API_URL||'http://localhost:5003';};const API_BASE_URL=\"\".concat(getApiUrl());// Configure axios to include credentials (cookies) with requests\naxios.defaults.withCredentials=true;export const AuthProvider=_ref=>{let{children}=_ref;// Initialize state from localStorage immediately\nconst getInitialState=()=>{try{const storedUser=localStorage.getItem('userData');if(storedUser){return{user:JSON.parse(storedUser),isAuthenticated:true};}}catch(error){console.error('Error parsing stored user data:',error);}return{user:null,isAuthenticated:false};};const initialState=getInitialState();const[user,setUser]=useState(initialState.user);const[isAuthenticated,setIsAuthenticated]=useState(initialState.isAuthenticated);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);// Store session cookie for session maintenance\nconst storeSessionCookie=()=>{const cookies=document.cookie.split(';');const sessionCookie=cookies.find(cookie=>cookie.trim().startsWith('talentshield.sid='));if(sessionCookie){console.log('Session cookie captured:',sessionCookie);localStorage.setItem('sessionCookie',sessionCookie);}else{localStorage.removeItem('sessionCookie');}};// Check for existing session on app start\nuseEffect(()=>{// Only run background validation if user is not already set\nif(!user){checkExistingSession();}// Listen for localStorage changes to sync across tabs\nconst handleStorageChange=e=>{if(e.key==='userData'){if(e.newValue){try{const userData=JSON.parse(e.newValue);setUser(userData);setIsAuthenticated(true);}catch(error){console.error('Error parsing storage change:',error);}}else{// userData was removed\nsetUser(null);setIsAuthenticated(false);}}};window.addEventListener('storage',handleStorageChange);return()=>{window.removeEventListener('storage',handleStorageChange);};},[user,checkExistingSession]);const checkExistingSession=useCallback(async()=>{// This function now only validates with backend, state is already set from localStorage\nconst storedUser=localStorage.getItem('userData');if(storedUser){try{await axios.get(\"\".concat(API_BASE_URL,\"/api/auth/validate-session\"),{withCredentials:true,timeout:3000});// Session is valid, no action needed\n}catch(error){var _error$response;// Only clear on explicit forbidden response\nif(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===403){handleInvalidSession();}// For other errors (401, network), keep using stored data\n}}},[]);const login=async function(email,password){let rememberMe=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;setLoading(true);setError(null);try{const response=await axios.post(\"\".concat(API_BASE_URL,\"/api/auth/login\"),{email,password,rememberMe});const{token,user:userData}=response.data;// Store token in localStorage for API compatibility\nif(token){localStorage.setItem(\"authToken\",token);}localStorage.setItem(\"userData\",JSON.stringify(userData));// Update state - session is automatically handled by cookies\nsetUser(userData);setIsAuthenticated(true);return{success:true};}catch(err){var _err$response,_err$response$data;const errorMessage=((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||\"Login failed\";setError(errorMessage);return{success:false,error:errorMessage};}finally{setLoading(false);}};const signup=async userData=>{setLoading(true);setError(null);try{await axios.post(\"\".concat(API_BASE_URL,\"/api/auth/signup\"),userData);return{success:true,message:\"Account created successfully\"};}catch(err){var _err$response2,_err$response2$data;const errorMessage=((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.message)||\"Signup failed\";setError(errorMessage);return{success:false,error:errorMessage};}finally{setLoading(false);}};const logout=async()=>{setLoading(true);try{// Call backend logout endpoint to destroy session\nawait axios.post(\"\".concat(API_BASE_URL,\"/api/auth/logout\"));}catch(err){console.error(\"Logout error:\",err);}finally{// Clear local state and storage regardless of API call result\nlocalStorage.removeItem(\"authToken\");localStorage.removeItem(\"userData\");localStorage.removeItem(\"sessionCookie\");setUser(null);setIsAuthenticated(false);setError(null);setLoading(false);}};const handleInvalidSession=()=>{console.log(\"Invalid session. Clearing user data.\");localStorage.removeItem(\"userData\");localStorage.removeItem(\"authToken\");localStorage.removeItem(\"sessionCookie\");setUser(null);setIsAuthenticated(false);};const value={user,isAuthenticated,loading,error,login,signup,logout,storeSessionCookie};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","axios","jsx","_jsx","AuthContext","useAuth","context","Error","getApiUrl","_process$env$REACT_AP","process","env","NODE_ENV","REACT_APP_API_URL","REACT_APP_API_BASE_URL","startsWith","API_BASE_URL","concat","defaults","withCredentials","AuthProvider","_ref","children","getInitialState","storedUser","localStorage","getItem","user","JSON","parse","isAuthenticated","error","console","initialState","setUser","setIsAuthenticated","loading","setLoading","setError","storeSessionCookie","cookies","document","cookie","split","sessionCookie","find","trim","log","setItem","removeItem","checkExistingSession","handleStorageChange","e","key","newValue","userData","window","addEventListener","removeEventListener","get","timeout","_error$response","response","status","handleInvalidSession","login","email","password","rememberMe","arguments","length","undefined","post","token","data","stringify","success","err","_err$response","_err$response$data","errorMessage","message","signup","_err$response2","_err$response2$data","logout","value","Provider"],"sources":["/root/hrms/frontend/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\nimport React, { createContext, useContext, useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n\nconst getApiUrl = () => {\n  // In development, use localhost URL\n  if (process.env.NODE_ENV === 'development' && process.env.REACT_APP_API_URL) {\n    return process.env.REACT_APP_API_URL;\n  }\n  // In production or when API_BASE_URL is relative, use relative path\n  if (process.env.REACT_APP_API_BASE_URL?.startsWith('/')) {\n    return '';\n  }\n  // Fallback to localhost for development\n  return process.env.REACT_APP_API_URL || 'http://localhost:5003';\n};\n\nconst API_BASE_URL = `${getApiUrl()}`;\n\n// Configure axios to include credentials (cookies) with requests\naxios.defaults.withCredentials = true;\n\nexport const AuthProvider = ({ children }) => {\n  // Initialize state from localStorage immediately\n  const getInitialState = () => {\n    try {\n      const storedUser = localStorage.getItem('userData');\n      if (storedUser) {\n        return {\n          user: JSON.parse(storedUser),\n          isAuthenticated: true\n        };\n      }\n    } catch (error) {\n      console.error('Error parsing stored user data:', error);\n    }\n    return {\n      user: null,\n      isAuthenticated: false\n    };\n  };\n\n  const initialState = getInitialState();\n  const [user, setUser] = useState(initialState.user);\n  const [isAuthenticated, setIsAuthenticated] = useState(initialState.isAuthenticated);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Store session cookie for session maintenance\n  const storeSessionCookie = () => {\n    const cookies = document.cookie.split(';');\n    const sessionCookie = cookies.find(cookie => cookie.trim().startsWith('talentshield.sid='));\n\n    if (sessionCookie) {\n      console.log('Session cookie captured:', sessionCookie);\n      localStorage.setItem('sessionCookie', sessionCookie);\n    } else {\n      localStorage.removeItem('sessionCookie');\n    }\n  };\n\n  // Check for existing session on app start\n  useEffect(() => {\n    // Only run background validation if user is not already set\n    if (!user) {\n      checkExistingSession();\n    }\n\n    // Listen for localStorage changes to sync across tabs\n    const handleStorageChange = (e) => {\n      if (e.key === 'userData') {\n        if (e.newValue) {\n          try {\n            const userData = JSON.parse(e.newValue);\n            setUser(userData);\n            setIsAuthenticated(true);\n          } catch (error) {\n            console.error('Error parsing storage change:', error);\n          }\n        } else {\n          // userData was removed\n          setUser(null);\n          setIsAuthenticated(false);\n        }\n      }\n    };\n\n    window.addEventListener('storage', handleStorageChange);\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, [user, checkExistingSession]);\n\n  const checkExistingSession = useCallback(async () => {\n    // This function now only validates with backend, state is already set from localStorage\n    const storedUser = localStorage.getItem('userData');\n    if (storedUser) {\n      try {\n        await axios.get(`${API_BASE_URL}/api/auth/validate-session`, {\n          withCredentials: true,\n          timeout: 3000\n        });\n        // Session is valid, no action needed\n      } catch (error) {\n        // Only clear on explicit forbidden response\n        if (error.response?.status === 403) {\n          handleInvalidSession();\n        }\n        // For other errors (401, network), keep using stored data\n      }\n    }\n  }, []);\n\n  const login = async (email, password, rememberMe = false) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/auth/login`, {\n        email,\n        password,\n        rememberMe\n      });\n\n      const { token, user: userData } = response.data;\n\n      // Store token in localStorage for API compatibility\n      if (token) {\n        localStorage.setItem(\"authToken\", token);\n      }\n      localStorage.setItem(\"userData\", JSON.stringify(userData));\n\n      // Update state - session is automatically handled by cookies\n      setUser(userData);\n      setIsAuthenticated(true);\n\n      return { success: true };\n    } catch (err) {\n      const errorMessage = err.response?.data?.message || \"Login failed\";\n      setError(errorMessage);\n      return { success: false, error: errorMessage };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const signup = async (userData) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      await axios.post(`${API_BASE_URL}/api/auth/signup`, userData);\n\n      return { success: true, message: \"Account created successfully\" };\n    } catch (err) {\n      const errorMessage = err.response?.data?.message || \"Signup failed\";\n      setError(errorMessage);\n      return { success: false, error: errorMessage };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = async () => {\n    setLoading(true);\n    try {\n      // Call backend logout endpoint to destroy session\n      await axios.post(`${API_BASE_URL}/api/auth/logout`);\n    } catch (err) {\n      console.error(\"Logout error:\", err);\n    } finally {\n      // Clear local state and storage regardless of API call result\n      localStorage.removeItem(\"authToken\");\n      localStorage.removeItem(\"userData\");\n      localStorage.removeItem(\"sessionCookie\");\n      setUser(null);\n      setIsAuthenticated(false);\n      setError(null);\n      setLoading(false);\n    }\n  };\n\n  const handleInvalidSession = () => {\n    console.log(\"Invalid session. Clearing user data.\");\n    localStorage.removeItem(\"userData\");\n    localStorage.removeItem(\"authToken\");\n    localStorage.removeItem(\"sessionCookie\");\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    error,\n    login,\n    signup,\n    logout,\n    storeSessionCookie\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}