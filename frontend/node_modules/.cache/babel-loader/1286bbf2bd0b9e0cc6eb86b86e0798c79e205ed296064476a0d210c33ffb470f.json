{"ast":null,"code":"// src/context/AuthContext.js\nimport React,{createContext,useContext,useState,useEffect}from\"react\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error(\"useAuth must be used within an AuthProvider\");}return context;};const getApiUrl=()=>{var _process$env$REACT_AP;// In development, use localhost URL\nif(process.env.NODE_ENV==='development'&&process.env.REACT_APP_API_URL){return process.env.REACT_APP_API_URL;}// In production or when API_BASE_URL is relative, use relative path\nif((_process$env$REACT_AP=process.env.REACT_APP_API_BASE_URL)!==null&&_process$env$REACT_AP!==void 0&&_process$env$REACT_AP.startsWith('/')){return'';}// Fallback to localhost for development\nreturn process.env.REACT_APP_API_URL||'http://localhost:5003';};const API_BASE_URL=\"\".concat(getApiUrl(),\"/api\");// Configure axios to include credentials (cookies) with requests\naxios.defaults.withCredentials=true;export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[isAuthenticated,setIsAuthenticated]=useState(false);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Check for existing session on app start\nuseEffect(()=>{validateSession();},[]);const validateSession=async()=>{setLoading(true);try{// First check if we have stored user data\nconst storedUserData=localStorage.getItem(\"userData\");const storedToken=localStorage.getItem(\"authToken\");if(storedUserData&&storedToken){// Temporarily set user data while validating session\nconst userData=JSON.parse(storedUserData);setUser(userData);setIsAuthenticated(true);}// Validate with server\nconst response=await axios.get(\"\".concat(API_BASE_URL,\"/api/auth/validate-session\"));if(response.data.isAuthenticated){setUser(response.data.user);setIsAuthenticated(true);// Update stored data with fresh user info\nlocalStorage.setItem(\"userData\",JSON.stringify(response.data.user));// Keep token in localStorage for API compatibility\nif(response.data.token){localStorage.setItem(\"authToken\",response.data.token);}}else{setUser(null);setIsAuthenticated(false);localStorage.removeItem(\"authToken\");localStorage.removeItem(\"userData\");}}catch(err){console.log(\"Session validation failed:\",err.message);// If we have stored data but server validation fails, keep user logged in temporarily\nconst storedUserData=localStorage.getItem(\"userData\");if(storedUserData){try{const userData=JSON.parse(storedUserData);setUser(userData);setIsAuthenticated(true);console.log(\"Using cached user data due to network/server issue\");}catch(parseErr){// If stored data is corrupted, clear everything\nsetUser(null);setIsAuthenticated(false);localStorage.removeItem(\"authToken\");localStorage.removeItem(\"userData\");}}else{setUser(null);setIsAuthenticated(false);localStorage.removeItem(\"authToken\");localStorage.removeItem(\"userData\");}}finally{setLoading(false);}};const login=async function(email,password){let rememberMe=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;setLoading(true);setError(null);try{const response=await axios.post(\"\".concat(API_BASE_URL,\"/auth/login\"),{email,password,rememberMe});const{token,user:userData}=response.data;// Store token in localStorage for API compatibility\nif(token){localStorage.setItem(\"authToken\",token);}localStorage.setItem(\"userData\",JSON.stringify(userData));// Update state - session is automatically handled by cookies\nsetUser(userData);setIsAuthenticated(true);return{success:true};}catch(err){var _err$response,_err$response$data;const errorMessage=((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||\"Login failed\";setError(errorMessage);return{success:false,error:errorMessage};}finally{setLoading(false);}};const signup=async userData=>{setLoading(true);setError(null);try{const response=await axios.post(\"\".concat(API_BASE_URL,\"/auth/signup\"),userData);return{success:true,message:\"Account created successfully\"};}catch(err){var _err$response2,_err$response2$data;const errorMessage=((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.message)||\"Signup failed\";setError(errorMessage);return{success:false,error:errorMessage};}finally{setLoading(false);}};const logout=async()=>{setLoading(true);try{// Call backend logout endpoint to destroy session\nawait axios.post(\"\".concat(API_BASE_URL,\"/auth/logout\"));}catch(err){console.error(\"Logout error:\",err);}finally{// Clear local state and storage regardless of API call result\nlocalStorage.removeItem(\"authToken\");localStorage.removeItem(\"userData\");setUser(null);setIsAuthenticated(false);setError(null);setLoading(false);}};const value={user,isAuthenticated,loading,error,login,signup,logout,validateSession};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsx","_jsx","AuthContext","useAuth","context","Error","getApiUrl","_process$env$REACT_AP","process","env","NODE_ENV","REACT_APP_API_URL","REACT_APP_API_BASE_URL","startsWith","API_BASE_URL","concat","defaults","withCredentials","AuthProvider","_ref","children","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","error","setError","validateSession","storedUserData","localStorage","getItem","storedToken","userData","JSON","parse","response","get","data","setItem","stringify","token","removeItem","err","console","log","message","parseErr","login","email","password","rememberMe","arguments","length","undefined","post","success","_err$response","_err$response$data","errorMessage","signup","_err$response2","_err$response2$data","logout","value","Provider"],"sources":["/root/hrms/frontend/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n\nconst getApiUrl = () => {\n  // In development, use localhost URL\n  if (process.env.NODE_ENV === 'development' && process.env.REACT_APP_API_URL) {\n    return process.env.REACT_APP_API_URL;\n  }\n  // In production or when API_BASE_URL is relative, use relative path\n  if (process.env.REACT_APP_API_BASE_URL?.startsWith('/')) {\n    return '';\n  }\n  // Fallback to localhost for development\n  return process.env.REACT_APP_API_URL || 'http://localhost:5003';\n};\n\nconst API_BASE_URL = `${getApiUrl()}/api`;\n\n// Configure axios to include credentials (cookies) with requests\naxios.defaults.withCredentials = true;\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check for existing session on app start\n  useEffect(() => {\n    validateSession();\n  }, []);\n\n  const validateSession = async () => {\n    setLoading(true);\n    try {\n      // First check if we have stored user data\n      const storedUserData = localStorage.getItem(\"userData\");\n      const storedToken = localStorage.getItem(\"authToken\");\n      \n      if (storedUserData && storedToken) {\n        // Temporarily set user data while validating session\n        const userData = JSON.parse(storedUserData);\n        setUser(userData);\n        setIsAuthenticated(true);\n      }\n\n      // Validate with server\n      const response = await axios.get(`${API_BASE_URL}/api/auth/validate-session`);\n      \n      if (response.data.isAuthenticated) {\n        setUser(response.data.user);\n        setIsAuthenticated(true);\n        // Update stored data with fresh user info\n        localStorage.setItem(\"userData\", JSON.stringify(response.data.user));\n        // Keep token in localStorage for API compatibility\n        if (response.data.token) {\n          localStorage.setItem(\"authToken\", response.data.token);\n        }\n      } else {\n        setUser(null);\n        setIsAuthenticated(false);\n        localStorage.removeItem(\"authToken\");\n        localStorage.removeItem(\"userData\");\n      }\n    } catch (err) {\n      console.log(\"Session validation failed:\", err.message);\n      // If we have stored data but server validation fails, keep user logged in temporarily\n      const storedUserData = localStorage.getItem(\"userData\");\n      if (storedUserData) {\n        try {\n          const userData = JSON.parse(storedUserData);\n          setUser(userData);\n          setIsAuthenticated(true);\n          console.log(\"Using cached user data due to network/server issue\");\n        } catch (parseErr) {\n          // If stored data is corrupted, clear everything\n          setUser(null);\n          setIsAuthenticated(false);\n          localStorage.removeItem(\"authToken\");\n          localStorage.removeItem(\"userData\");\n        }\n      } else {\n        setUser(null);\n        setIsAuthenticated(false);\n        localStorage.removeItem(\"authToken\");\n        localStorage.removeItem(\"userData\");\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (email, password, rememberMe = false) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await axios.post(`${API_BASE_URL}/auth/login`, {\n        email,\n        password,\n        rememberMe\n      });\n      \n      const { token, user: userData } = response.data;\n      \n      // Store token in localStorage for API compatibility\n      if (token) {\n        localStorage.setItem(\"authToken\", token);\n      }\n      localStorage.setItem(\"userData\", JSON.stringify(userData));\n      \n      // Update state - session is automatically handled by cookies\n      setUser(userData);\n      setIsAuthenticated(true);\n      \n      return { success: true };\n    } catch (err) {\n      const errorMessage = err.response?.data?.message || \"Login failed\";\n      setError(errorMessage);\n      return { success: false, error: errorMessage };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const signup = async (userData) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await axios.post(`${API_BASE_URL}/auth/signup`, userData);\n      \n      return { success: true, message: \"Account created successfully\" };\n    } catch (err) {\n      const errorMessage = err.response?.data?.message || \"Signup failed\";\n      setError(errorMessage);\n      return { success: false, error: errorMessage };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = async () => {\n    setLoading(true);\n    try {\n      // Call backend logout endpoint to destroy session\n      await axios.post(`${API_BASE_URL}/auth/logout`);\n    } catch (err) {\n      console.error(\"Logout error:\", err);\n    } finally {\n      // Clear local state and storage regardless of API call result\n      localStorage.removeItem(\"authToken\");\n      localStorage.removeItem(\"userData\");\n      setUser(null);\n      setIsAuthenticated(false);\n      setError(null);\n      setLoading(false);\n    }\n  };\n\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    error,\n    login,\n    signup,\n    logout,\n    validateSession\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}