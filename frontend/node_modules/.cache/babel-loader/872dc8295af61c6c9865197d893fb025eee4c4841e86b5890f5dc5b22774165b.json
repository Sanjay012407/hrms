{"ast":null,"code":"import _objectSpread from\"/root/hrms/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import axios from'axios';import{useAuth}from'./AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const ProfileContext=/*#__PURE__*/createContext();const API_BASE_URL=process.env.REACT_APP_API_BASE_URL;export const useProfiles=()=>{const context=useContext(ProfileContext);if(!context){throw new Error('useProfiles must be used within a ProfileProvider');}return context;};export const ProfileProvider=_ref=>{let{children}=_ref;const[profiles,setProfiles]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const{user}=useAuth();// Fetch profiles from API\nconst fetchProfiles=async()=>{setLoading(true);try{const response=await axios.get(\"\".concat(API_BASE_URL,\"/profiles\"));setProfiles(response.data);setError(null);}catch(err){setError('Failed to fetch profiles');console.error('Error fetching profiles:',err);setProfiles([]);}finally{setLoading(false);}};// Load profiles on mount\nuseEffect(()=>{fetchProfiles();},[]);const addProfile=async newProfile=>{setLoading(true);try{const response=await axios.post(\"\".concat(API_BASE_URL,\"/profiles\"),newProfile);setProfiles(prev=>[response.data,...prev]);setError(null);return response.data;}catch(err){setError('Failed to create profile');console.error('Error creating profile:',err);throw err;}finally{setLoading(false);}};const updateProfile=async(id,updatedProfile)=>{setLoading(true);try{const response=await axios.put(\"\".concat(API_BASE_URL,\"/profiles/\").concat(id),updatedProfile);setProfiles(prev=>prev.map(profile=>profile._id===id?response.data:profile));setError(null);return response.data;}catch(err){setError('Failed to update profile');console.error('Error updating profile:',err);throw err;}finally{setLoading(false);}};const deleteProfile=async id=>{setLoading(true);try{await axios.delete(\"\".concat(API_BASE_URL,\"/profiles/\").concat(id));setProfiles(prev=>prev.filter(profile=>profile._id!==id));setError(null);}catch(err){setError('Failed to delete profile');console.error('Error deleting profile:',err);throw err;}finally{setLoading(false);}};const getProfileById=id=>{return profiles.find(profile=>profile._id===id);};const uploadProfilePicture=async(id,file)=>{setLoading(true);try{const formData=new FormData();formData.append('profilePicture',file);const response=await axios.post(\"\".concat(API_BASE_URL,\"/profiles/\").concat(id,\"/upload-picture\"),formData,{headers:{'Content-Type':'multipart/form-data'}});// Update profile in state\nsetProfiles(prev=>prev.map(profile=>profile._id===id?_objectSpread(_objectSpread({},profile),{},{profilePicture:response.data.profilePicture}):profile));setError(null);return response.data.profilePicture;}catch(err){setError('Failed to upload profile picture');throw err;}finally{setLoading(false);}};// User profile management - no default hardcoded data\nconst[userProfile,setUserProfile]=useState({});// Initialize user profile with actual user data when user changes\nuseEffect(()=>{if(user){setUserProfile({firstName:user.firstName||'',lastName:user.lastName||'',email:user.email||'',company:user.company||'',jobTitle:user.jobTitle||'',mobile:user.mobile||'',dateOfBirth:user.dateOfBirth||'',bio:user.bio||'',language:user.language||'English',address:user.address||{},staffType:user.staffType||'Staff',role:user.role||'',skillkoId:user.skillkoId||'',department:user.department||'',jobLevel:user.jobLevel||'',profilePicture:user.profilePicture||''});}},[user]);const updateUserProfile=async profileData=>{setLoading(true);try{// TODO: Replace with actual API call when backend profile update endpoint is ready\n// const response = await axios.put('/api/users/profile', profileData);\nsetUserProfile(prev=>_objectSpread(_objectSpread({},prev),{},{firstName:profileData.firstName,lastName:profileData.lastName,name:\"\".concat(profileData.firstName,\" \").concat(profileData.lastName),role:\"Account Administrator, \".concat(profileData.jobTitle,\", \").concat(profileData.company),email:profileData.username,company:profileData.company,jobTitle:profileData.jobTitle,mobile:profileData.mobile,dob:profileData.dob,bio:profileData.bio,language:profileData.language,otherInfo:profileData.otherInfo}));console.log('Profile updated:',profileData);setError(null);return{success:true};}catch(err){setError('Failed to update profile');return{success:false,error:err.message};}finally{setLoading(false);}};const value={profiles,userProfile,loading,error,addProfile,updateProfile,deleteProfile,getProfileById,uploadProfilePicture,fetchProfiles,updateUserProfile};return/*#__PURE__*/_jsx(ProfileContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","useAuth","jsx","_jsx","ProfileContext","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","useProfiles","context","Error","ProfileProvider","_ref","children","profiles","setProfiles","loading","setLoading","error","setError","user","fetchProfiles","response","get","concat","data","err","console","addProfile","newProfile","post","prev","updateProfile","id","updatedProfile","put","map","profile","_id","deleteProfile","delete","filter","getProfileById","find","uploadProfilePicture","file","formData","FormData","append","headers","_objectSpread","profilePicture","userProfile","setUserProfile","firstName","lastName","email","company","jobTitle","mobile","dateOfBirth","bio","language","address","staffType","role","skillkoId","department","jobLevel","updateUserProfile","profileData","name","username","dob","otherInfo","log","success","message","value","Provider"],"sources":["/root/hrms/frontend/src/context/ProfileContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useAuth } from './AuthContext';\n\nconst ProfileContext = createContext();\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nexport const useProfiles = () => {\n  const context = useContext(ProfileContext);\n  if (!context) {\n    throw new Error('useProfiles must be used within a ProfileProvider');\n  }\n  return context;\n};\n\nexport const ProfileProvider = ({ children }) => {\n  const [profiles, setProfiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { user } = useAuth();\n\n  // Fetch profiles from API\n  const fetchProfiles = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get(`${API_BASE_URL}/profiles`);\n      setProfiles(response.data);\n      setError(null);\n    } catch (err) {\n      setError('Failed to fetch profiles');\n      console.error('Error fetching profiles:', err);\n      setProfiles([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load profiles on mount\n  useEffect(() => {\n    fetchProfiles();\n  }, []);\n\n  const addProfile = async (newProfile) => {\n    setLoading(true);\n    try {\n      const response = await axios.post(`${API_BASE_URL}/profiles`, newProfile);\n      setProfiles(prev => [response.data, ...prev]);\n      setError(null);\n      return response.data;\n    } catch (err) {\n      setError('Failed to create profile');\n      console.error('Error creating profile:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateProfile = async (id, updatedProfile) => {\n    setLoading(true);\n    try {\n      const response = await axios.put(`${API_BASE_URL}/profiles/${id}`, updatedProfile);\n      setProfiles(prev => \n        prev.map(profile => profile._id === id ? response.data : profile)\n      );\n      setError(null);\n      return response.data;\n    } catch (err) {\n      setError('Failed to update profile');\n      console.error('Error updating profile:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const deleteProfile = async (id) => {\n    setLoading(true);\n    try {\n      await axios.delete(`${API_BASE_URL}/profiles/${id}`);\n      setProfiles(prev => prev.filter(profile => profile._id !== id));\n      setError(null);\n    } catch (err) {\n      setError('Failed to delete profile');\n      console.error('Error deleting profile:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getProfileById = (id) => {\n    return profiles.find(profile => profile._id === id);\n  };\n\n  const uploadProfilePicture = async (id, file) => {\n    setLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('profilePicture', file);\n      \n      const response = await axios.post(`${API_BASE_URL}/profiles/${id}/upload-picture`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      \n      // Update profile in state\n      setProfiles(prev => \n        prev.map(profile => \n          profile._id === id \n            ? { ...profile, profilePicture: response.data.profilePicture }\n            : profile\n        )\n      );\n      \n      setError(null);\n      return response.data.profilePicture;\n    } catch (err) {\n      setError('Failed to upload profile picture');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // User profile management - no default hardcoded data\n  const [userProfile, setUserProfile] = useState({});\n\n  // Initialize user profile with actual user data when user changes\n  useEffect(() => {\n    if (user) {\n      setUserProfile({\n        firstName: user.firstName || '',\n        lastName: user.lastName || '',\n        email: user.email || '',\n        company: user.company || '',\n        jobTitle: user.jobTitle || '',\n        mobile: user.mobile || '',\n        dateOfBirth: user.dateOfBirth || '',\n        bio: user.bio || '',\n        language: user.language || 'English',\n        address: user.address || {},\n        staffType: user.staffType || 'Staff',\n        role: user.role || '',\n        skillkoId: user.skillkoId || '',\n        department: user.department || '',\n        jobLevel: user.jobLevel || '',\n        profilePicture: user.profilePicture || ''\n      });\n    }\n  }, [user]);\n\n  const updateUserProfile = async (profileData) => {\n    setLoading(true);\n    try {\n      // TODO: Replace with actual API call when backend profile update endpoint is ready\n      // const response = await axios.put('/api/users/profile', profileData);\n      \n      setUserProfile(prev => ({\n        ...prev,\n        firstName: profileData.firstName,\n        lastName: profileData.lastName,\n        name: `${profileData.firstName} ${profileData.lastName}`,\n        role: `Account Administrator, ${profileData.jobTitle}, ${profileData.company}`,\n        email: profileData.username,\n        company: profileData.company,\n        jobTitle: profileData.jobTitle,\n        mobile: profileData.mobile,\n        dob: profileData.dob,\n        bio: profileData.bio,\n        language: profileData.language,\n        otherInfo: profileData.otherInfo\n      }));\n      \n      console.log('Profile updated:', profileData);\n      setError(null);\n      return { success: true };\n    } catch (err) {\n      setError('Failed to update profile');\n      return { success: false, error: err.message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const value = {\n    profiles,\n    userProfile,\n    loading,\n    error,\n    addProfile,\n    updateProfile,\n    deleteProfile,\n    getProfileById,\n    uploadProfilePicture,\n    fetchProfiles,\n    updateUserProfile\n  };\n\n  return (\n    <ProfileContext.Provider value={value}>\n      {children}\n    </ProfileContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}