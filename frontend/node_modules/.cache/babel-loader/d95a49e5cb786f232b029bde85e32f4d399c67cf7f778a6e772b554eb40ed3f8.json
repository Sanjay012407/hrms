{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\hrms\\\\frontend\\\\src\\\\components\\\\JobTitleDropdown.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst JobTitleDropdown = ({\n  value,\n  onChange,\n  name = \"jobTitle\",\n  placeholder = \"Select or add job title\",\n  className = \"\",\n  required = false\n}) => {\n  _s();\n  const [jobTitles, setJobTitles] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [newJobTitle, setNewJobTitle] = useState('');\n  const getApiUrl = () => {\n    if (process.env.NODE_ENV === 'production' && process.env.REACT_APP_API_URL) {\n      return process.env.REACT_APP_API_URL;\n    }\n    return process.env.REACT_APP_API_URL || 'https://talentshield.co.uk';\n  };\n\n  // Fetch job titles on component mount\n  useEffect(() => {\n    fetchJobTitles();\n  }, []);\n  const fetchJobTitles = async () => {\n    try {\n      const response = await fetch(`${getApiUrl()}/api/job-titles`);\n      if (response.ok) {\n        const data = await response.json();\n        setJobTitles(data);\n      }\n    } catch (error) {\n      console.error('Error fetching job titles:', error);\n    }\n  };\n  const handleJobTitleSearch = async searchTerm => {\n    if (!searchTerm.trim()) {\n      fetchJobTitles();\n      return;\n    }\n    try {\n      const response = await fetch(`${getApiUrl()}/api/job-titles/search?q=${encodeURIComponent(searchTerm)}`);\n      if (response.ok) {\n        const data = await response.json();\n        setJobTitles(data);\n      }\n    } catch (error) {\n      console.error('Error searching job titles:', error);\n    }\n  };\n  const handleAddJobTitle = async jobTitleName => {\n    if (!jobTitleName.trim()) return;\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${getApiUrl()}/api/job-titles`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: jobTitleName.trim()\n        })\n      });\n      if (response.ok) {\n        const newJobTitleData = await response.json();\n\n        // Update the job titles list\n        setJobTitles(prev => {\n          const exists = prev.find(title => title._id === newJobTitleData._id);\n          if (exists) return prev;\n          return [newJobTitleData, ...prev];\n        });\n\n        // Select the new job title\n        onChange({\n          target: {\n            name,\n            value: newJobTitleData.name\n          }\n        });\n        setSearchTerm(newJobTitleData.name);\n        setNewJobTitle('');\n        setShowAddForm(false);\n        setIsDropdownOpen(false);\n      }\n    } catch (error) {\n      console.error('Error adding job title:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleInputChange = e => {\n    const inputValue = e.target.value;\n    setSearchTerm(inputValue);\n    onChange({\n      target: {\n        name,\n        value: inputValue\n      }\n    });\n    if (inputValue.length > 0) {\n      setIsDropdownOpen(true);\n      handleJobTitleSearch(inputValue);\n    } else {\n      setIsDropdownOpen(false);\n      fetchJobTitles();\n    }\n  };\n  const handleSelectJobTitle = jobTitle => {\n    setSearchTerm(jobTitle.name);\n    onChange({\n      target: {\n        name,\n        value: jobTitle.name\n      }\n    });\n    setIsDropdownOpen(false);\n  };\n  const handleInputFocus = () => {\n    setIsDropdownOpen(true);\n    if (!searchTerm) {\n      fetchJobTitles();\n    }\n  };\n  const handleInputBlur = () => {\n    // Delay closing to allow for clicks on dropdown items\n    setTimeout(() => {\n      if (!showAddForm) {\n        setIsDropdownOpen(false);\n      }\n    }, 200);\n  };\n  const filteredJobTitles = jobTitles.filter(title => title.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  const exactMatch = filteredJobTitles.find(title => title.name.toLowerCase() === searchTerm.toLowerCase());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `relative ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: name,\n      value: searchTerm,\n      onChange: handleInputChange,\n      onFocus: handleInputFocus,\n      onBlur: handleInputBlur,\n      placeholder: placeholder,\n      required: required,\n      className: \"w-full border rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n      autoComplete: \"off\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute z-50 w-full mt-1 bg-white border border-gray-300 rounded-md shadow-lg max-h-60 overflow-y-auto\",\n      children: [filteredJobTitles.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: filteredJobTitles.map(jobTitle => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-3 py-2 hover:bg-gray-100 cursor-pointer text-sm\",\n          onMouseDown: () => handleSelectJobTitle(jobTitle),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-medium\",\n            children: jobTitle.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 19\n          }, this), jobTitle.description && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-500\",\n            children: jobTitle.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }, this)]\n        }, jobTitle._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }, this))\n      }, void 0, false) : searchTerm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-3 py-2 text-sm text-gray-500\",\n        children: \"No job titles found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }, this), searchTerm && !exactMatch && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-t border-gray-200\",\n        children: !showAddForm ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"w-full px-3 py-2 text-left text-sm text-blue-600 hover:bg-blue-50 focus:outline-none\",\n          onMouseDown: () => setShowAddForm(true),\n          children: [\"+ Add \\\"\", searchTerm, \"\\\" as new job title\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 border-t\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newJobTitle,\n              onChange: e => setNewJobTitle(e.target.value),\n              placeholder: \"Enter job title name\",\n              className: \"w-full px-2 py-1 text-sm border rounded focus:outline-none focus:ring-1 focus:ring-blue-500\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => handleAddJobTitle(newJobTitle || searchTerm),\n                disabled: isLoading,\n                className: \"flex-1 px-2 py-1 text-xs bg-blue-600 text-white rounded hover:bg-blue-700 disabled:opacity-50\",\n                children: isLoading ? 'Adding...' : 'Add'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => {\n                  setShowAddForm(false);\n                  setNewJobTitle('');\n                },\n                className: \"flex-1 px-2 py-1 text-xs bg-gray-300 text-gray-700 rounded hover:bg-gray-400\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(JobTitleDropdown, \"GdEud5XYjWOp5d5VmTExUt4QHvE=\");\n_c = JobTitleDropdown;\nexport default JobTitleDropdown;\nvar _c;\n$RefreshReg$(_c, \"JobTitleDropdown\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","JobTitleDropdown","value","onChange","name","placeholder","className","required","_s","jobTitles","setJobTitles","searchTerm","setSearchTerm","isDropdownOpen","setIsDropdownOpen","isLoading","setIsLoading","showAddForm","setShowAddForm","newJobTitle","setNewJobTitle","getApiUrl","process","env","NODE_ENV","REACT_APP_API_URL","fetchJobTitles","response","fetch","ok","data","json","error","console","handleJobTitleSearch","trim","encodeURIComponent","handleAddJobTitle","jobTitleName","method","headers","body","JSON","stringify","newJobTitleData","prev","exists","find","title","_id","target","handleInputChange","e","inputValue","length","handleSelectJobTitle","jobTitle","handleInputFocus","handleInputBlur","setTimeout","filteredJobTitles","filter","toLowerCase","includes","exactMatch","children","type","onFocus","onBlur","autoComplete","fileName","_jsxFileName","lineNumber","columnNumber","map","onMouseDown","description","autoFocus","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/hrms/frontend/src/components/JobTitleDropdown.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst JobTitleDropdown = ({ \r\n  value, \r\n  onChange, \r\n  name = \"jobTitle\",\r\n  placeholder = \"Select or add job title\",\r\n  className = \"\",\r\n  required = false \r\n}) => {\r\n  const [jobTitles, setJobTitles] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showAddForm, setShowAddForm] = useState(false);\r\n  const [newJobTitle, setNewJobTitle] = useState('');\r\n\r\n  const getApiUrl = () => {\r\n    if (process.env.NODE_ENV === 'production' && process.env.REACT_APP_API_URL) {\r\n      return process.env.REACT_APP_API_URL;\r\n    }\r\n    return process.env.REACT_APP_API_URL || 'https://talentshield.co.uk';\r\n  };\r\n\r\n  // Fetch job titles on component mount\r\n  useEffect(() => {\r\n    fetchJobTitles();\r\n  }, []);\r\n\r\n  const fetchJobTitles = async () => {\r\n    try {\r\n      const response = await fetch(`${getApiUrl()}/api/job-titles`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setJobTitles(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching job titles:', error);\r\n    }\r\n  };\r\n\r\n  const handleJobTitleSearch = async (searchTerm) => {\r\n    if (!searchTerm.trim()) {\r\n      fetchJobTitles();\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${getApiUrl()}/api/job-titles/search?q=${encodeURIComponent(searchTerm)}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setJobTitles(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error searching job titles:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddJobTitle = async (jobTitleName) => {\r\n    if (!jobTitleName.trim()) return;\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(`${getApiUrl()}/api/job-titles`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ name: jobTitleName.trim() }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const newJobTitleData = await response.json();\r\n        \r\n        // Update the job titles list\r\n        setJobTitles(prev => {\r\n          const exists = prev.find(title => title._id === newJobTitleData._id);\r\n          if (exists) return prev;\r\n          return [newJobTitleData, ...prev];\r\n        });\r\n\r\n        // Select the new job title\r\n        onChange({ target: { name, value: newJobTitleData.name } });\r\n        setSearchTerm(newJobTitleData.name);\r\n        setNewJobTitle('');\r\n        setShowAddForm(false);\r\n        setIsDropdownOpen(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding job title:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const inputValue = e.target.value;\r\n    setSearchTerm(inputValue);\r\n    onChange({ target: { name, value: inputValue } });\r\n    \r\n    if (inputValue.length > 0) {\r\n      setIsDropdownOpen(true);\r\n      handleJobTitleSearch(inputValue);\r\n    } else {\r\n      setIsDropdownOpen(false);\r\n      fetchJobTitles();\r\n    }\r\n  };\r\n\r\n  const handleSelectJobTitle = (jobTitle) => {\r\n    setSearchTerm(jobTitle.name);\r\n    onChange({ target: { name, value: jobTitle.name } });\r\n    setIsDropdownOpen(false);\r\n  };\r\n\r\n  const handleInputFocus = () => {\r\n    setIsDropdownOpen(true);\r\n    if (!searchTerm) {\r\n      fetchJobTitles();\r\n    }\r\n  };\r\n\r\n  const handleInputBlur = () => {\r\n    // Delay closing to allow for clicks on dropdown items\r\n    setTimeout(() => {\r\n      if (!showAddForm) {\r\n        setIsDropdownOpen(false);\r\n      }\r\n    }, 200);\r\n  };\r\n\r\n  const filteredJobTitles = jobTitles.filter(title =>\r\n    title.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const exactMatch = filteredJobTitles.find(title => \r\n    title.name.toLowerCase() === searchTerm.toLowerCase()\r\n  );\r\n\r\n  return (\r\n    <div className={`relative ${className}`}>\r\n      <input\r\n        type=\"text\"\r\n        name={name}\r\n        value={searchTerm}\r\n        onChange={handleInputChange}\r\n        onFocus={handleInputFocus}\r\n        onBlur={handleInputBlur}\r\n        placeholder={placeholder}\r\n        required={required}\r\n        className=\"w-full border rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n        autoComplete=\"off\"\r\n      />\r\n\r\n      {isDropdownOpen && (\r\n        <div className=\"absolute z-50 w-full mt-1 bg-white border border-gray-300 rounded-md shadow-lg max-h-60 overflow-y-auto\">\r\n          {filteredJobTitles.length > 0 ? (\r\n            <>\r\n              {filteredJobTitles.map((jobTitle) => (\r\n                <div\r\n                  key={jobTitle._id}\r\n                  className=\"px-3 py-2 hover:bg-gray-100 cursor-pointer text-sm\"\r\n                  onMouseDown={() => handleSelectJobTitle(jobTitle)}\r\n                >\r\n                  <div className=\"font-medium\">{jobTitle.name}</div>\r\n                  {jobTitle.description && (\r\n                    <div className=\"text-xs text-gray-500\">{jobTitle.description}</div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </>\r\n          ) : searchTerm && (\r\n            <div className=\"px-3 py-2 text-sm text-gray-500\">\r\n              No job titles found\r\n            </div>\r\n          )}\r\n\r\n          {searchTerm && !exactMatch && (\r\n            <div className=\"border-t border-gray-200\">\r\n              {!showAddForm ? (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"w-full px-3 py-2 text-left text-sm text-blue-600 hover:bg-blue-50 focus:outline-none\"\r\n                  onMouseDown={() => setShowAddForm(true)}\r\n                >\r\n                  + Add \"{searchTerm}\" as new job title\r\n                </button>\r\n              ) : (\r\n                <div className=\"p-3 border-t\">\r\n                  <div className=\"flex flex-col gap-2\">\r\n                    <input\r\n                      type=\"text\"\r\n                      value={newJobTitle}\r\n                      onChange={(e) => setNewJobTitle(e.target.value)}\r\n                      placeholder=\"Enter job title name\"\r\n                      className=\"w-full px-2 py-1 text-sm border rounded focus:outline-none focus:ring-1 focus:ring-blue-500\"\r\n                      autoFocus\r\n                    />\r\n                    <div className=\"flex gap-2\">\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => handleAddJobTitle(newJobTitle || searchTerm)}\r\n                        disabled={isLoading}\r\n                        className=\"flex-1 px-2 py-1 text-xs bg-blue-600 text-white rounded hover:bg-blue-700 disabled:opacity-50\"\r\n                      >\r\n                        {isLoading ? 'Adding...' : 'Add'}\r\n                      </button>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                          setShowAddForm(false);\r\n                          setNewJobTitle('');\r\n                        }}\r\n                        className=\"flex-1 px-2 py-1 text-xs bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\r\n                      >\r\n                        Cancel\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobTitleDropdown;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,gBAAgB,GAAGA,CAAC;EACxBC,KAAK;EACLC,QAAQ;EACRC,IAAI,GAAG,UAAU;EACjBC,WAAW,GAAG,yBAAyB;EACvCC,SAAS,GAAG,EAAE;EACdC,QAAQ,GAAG;AACb,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAM0B,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIF,OAAO,CAACC,GAAG,CAACE,iBAAiB,EAAE;MAC1E,OAAOH,OAAO,CAACC,GAAG,CAACE,iBAAiB;IACtC;IACA,OAAOH,OAAO,CAACC,GAAG,CAACE,iBAAiB,IAAI,4BAA4B;EACtE,CAAC;;EAED;EACA7B,SAAS,CAAC,MAAM;IACd8B,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,SAAS,CAAC,CAAC,iBAAiB,CAAC;MAC7D,IAAIM,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCrB,YAAY,CAACoB,IAAI,CAAC;MACpB;IACF,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,MAAME,oBAAoB,GAAG,MAAOvB,UAAU,IAAK;IACjD,IAAI,CAACA,UAAU,CAACwB,IAAI,CAAC,CAAC,EAAE;MACtBT,cAAc,CAAC,CAAC;MAChB;IACF;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,SAAS,CAAC,CAAC,4BAA4Be,kBAAkB,CAACzB,UAAU,CAAC,EAAE,CAAC;MACxG,IAAIgB,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCrB,YAAY,CAACoB,IAAI,CAAC;MACpB;IACF,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAED,MAAMK,iBAAiB,GAAG,MAAOC,YAAY,IAAK;IAChD,IAAI,CAACA,YAAY,CAACH,IAAI,CAAC,CAAC,EAAE;IAE1BnB,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,SAAS,CAAC,CAAC,iBAAiB,EAAE;QAC5DkB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEvC,IAAI,EAAEkC,YAAY,CAACH,IAAI,CAAC;QAAE,CAAC;MACpD,CAAC,CAAC;MAEF,IAAIR,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMe,eAAe,GAAG,MAAMjB,QAAQ,CAACI,IAAI,CAAC,CAAC;;QAE7C;QACArB,YAAY,CAACmC,IAAI,IAAI;UACnB,MAAMC,MAAM,GAAGD,IAAI,CAACE,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACC,GAAG,KAAKL,eAAe,CAACK,GAAG,CAAC;UACpE,IAAIH,MAAM,EAAE,OAAOD,IAAI;UACvB,OAAO,CAACD,eAAe,EAAE,GAAGC,IAAI,CAAC;QACnC,CAAC,CAAC;;QAEF;QACA1C,QAAQ,CAAC;UAAE+C,MAAM,EAAE;YAAE9C,IAAI;YAAEF,KAAK,EAAE0C,eAAe,CAACxC;UAAK;QAAE,CAAC,CAAC;QAC3DQ,aAAa,CAACgC,eAAe,CAACxC,IAAI,CAAC;QACnCgB,cAAc,CAAC,EAAE,CAAC;QAClBF,cAAc,CAAC,KAAK,CAAC;QACrBJ,iBAAiB,CAAC,KAAK,CAAC;MAC1B;IACF,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,SAAS;MACRhB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMmC,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAMC,UAAU,GAAGD,CAAC,CAACF,MAAM,CAAChD,KAAK;IACjCU,aAAa,CAACyC,UAAU,CAAC;IACzBlD,QAAQ,CAAC;MAAE+C,MAAM,EAAE;QAAE9C,IAAI;QAAEF,KAAK,EAAEmD;MAAW;IAAE,CAAC,CAAC;IAEjD,IAAIA,UAAU,CAACC,MAAM,GAAG,CAAC,EAAE;MACzBxC,iBAAiB,CAAC,IAAI,CAAC;MACvBoB,oBAAoB,CAACmB,UAAU,CAAC;IAClC,CAAC,MAAM;MACLvC,iBAAiB,CAAC,KAAK,CAAC;MACxBY,cAAc,CAAC,CAAC;IAClB;EACF,CAAC;EAED,MAAM6B,oBAAoB,GAAIC,QAAQ,IAAK;IACzC5C,aAAa,CAAC4C,QAAQ,CAACpD,IAAI,CAAC;IAC5BD,QAAQ,CAAC;MAAE+C,MAAM,EAAE;QAAE9C,IAAI;QAAEF,KAAK,EAAEsD,QAAQ,CAACpD;MAAK;IAAE,CAAC,CAAC;IACpDU,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAM2C,gBAAgB,GAAGA,CAAA,KAAM;IAC7B3C,iBAAiB,CAAC,IAAI,CAAC;IACvB,IAAI,CAACH,UAAU,EAAE;MACfe,cAAc,CAAC,CAAC;IAClB;EACF,CAAC;EAED,MAAMgC,eAAe,GAAGA,CAAA,KAAM;IAC5B;IACAC,UAAU,CAAC,MAAM;MACf,IAAI,CAAC1C,WAAW,EAAE;QAChBH,iBAAiB,CAAC,KAAK,CAAC;MAC1B;IACF,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;EAED,MAAM8C,iBAAiB,GAAGnD,SAAS,CAACoD,MAAM,CAACb,KAAK,IAC9CA,KAAK,CAAC5C,IAAI,CAAC0D,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACpD,UAAU,CAACmD,WAAW,CAAC,CAAC,CAC5D,CAAC;EAED,MAAME,UAAU,GAAGJ,iBAAiB,CAACb,IAAI,CAACC,KAAK,IAC7CA,KAAK,CAAC5C,IAAI,CAAC0D,WAAW,CAAC,CAAC,KAAKnD,UAAU,CAACmD,WAAW,CAAC,CACtD,CAAC;EAED,oBACEhE,OAAA;IAAKQ,SAAS,EAAE,YAAYA,SAAS,EAAG;IAAA2D,QAAA,gBACtCnE,OAAA;MACEoE,IAAI,EAAC,MAAM;MACX9D,IAAI,EAAEA,IAAK;MACXF,KAAK,EAAES,UAAW;MAClBR,QAAQ,EAAEgD,iBAAkB;MAC5BgB,OAAO,EAAEV,gBAAiB;MAC1BW,MAAM,EAAEV,eAAgB;MACxBrD,WAAW,EAAEA,WAAY;MACzBE,QAAQ,EAAEA,QAAS;MACnBD,SAAS,EAAC,qFAAqF;MAC/F+D,YAAY,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,EAED5D,cAAc,iBACbf,OAAA;MAAKQ,SAAS,EAAC,yGAAyG;MAAA2D,QAAA,GACrHL,iBAAiB,CAACN,MAAM,GAAG,CAAC,gBAC3BxD,OAAA,CAAAE,SAAA;QAAAiE,QAAA,EACGL,iBAAiB,CAACc,GAAG,CAAElB,QAAQ,iBAC9B1D,OAAA;UAEEQ,SAAS,EAAC,oDAAoD;UAC9DqE,WAAW,EAAEA,CAAA,KAAMpB,oBAAoB,CAACC,QAAQ,CAAE;UAAAS,QAAA,gBAElDnE,OAAA;YAAKQ,SAAS,EAAC,aAAa;YAAA2D,QAAA,EAAET,QAAQ,CAACpD;UAAI;YAAAkE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EACjDjB,QAAQ,CAACoB,WAAW,iBACnB9E,OAAA;YAAKQ,SAAS,EAAC,uBAAuB;YAAA2D,QAAA,EAAET,QAAQ,CAACoB;UAAW;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CACnE;QAAA,GAPIjB,QAAQ,CAACP,GAAG;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQd,CACN;MAAC,gBACF,CAAC,GACD9D,UAAU,iBACZb,OAAA;QAAKQ,SAAS,EAAC,iCAAiC;QAAA2D,QAAA,EAAC;MAEjD;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACN,EAEA9D,UAAU,IAAI,CAACqD,UAAU,iBACxBlE,OAAA;QAAKQ,SAAS,EAAC,0BAA0B;QAAA2D,QAAA,EACtC,CAAChD,WAAW,gBACXnB,OAAA;UACEoE,IAAI,EAAC,QAAQ;UACb5D,SAAS,EAAC,sFAAsF;UAChGqE,WAAW,EAAEA,CAAA,KAAMzD,cAAc,CAAC,IAAI,CAAE;UAAA+C,QAAA,GACzC,UACQ,EAACtD,UAAU,EAAC,qBACrB;QAAA;UAAA2D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,gBAET3E,OAAA;UAAKQ,SAAS,EAAC,cAAc;UAAA2D,QAAA,eAC3BnE,OAAA;YAAKQ,SAAS,EAAC,qBAAqB;YAAA2D,QAAA,gBAClCnE,OAAA;cACEoE,IAAI,EAAC,MAAM;cACXhE,KAAK,EAAEiB,WAAY;cACnBhB,QAAQ,EAAGiD,CAAC,IAAKhC,cAAc,CAACgC,CAAC,CAACF,MAAM,CAAChD,KAAK,CAAE;cAChDG,WAAW,EAAC,sBAAsB;cAClCC,SAAS,EAAC,6FAA6F;cACvGuE,SAAS;YAAA;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC,eACF3E,OAAA;cAAKQ,SAAS,EAAC,YAAY;cAAA2D,QAAA,gBACzBnE,OAAA;gBACEoE,IAAI,EAAC,QAAQ;gBACbY,OAAO,EAAEA,CAAA,KAAMzC,iBAAiB,CAAClB,WAAW,IAAIR,UAAU,CAAE;gBAC5DoE,QAAQ,EAAEhE,SAAU;gBACpBT,SAAS,EAAC,+FAA+F;gBAAA2D,QAAA,EAExGlD,SAAS,GAAG,WAAW,GAAG;cAAK;gBAAAuD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1B,CAAC,eACT3E,OAAA;gBACEoE,IAAI,EAAC,QAAQ;gBACbY,OAAO,EAAEA,CAAA,KAAM;kBACb5D,cAAc,CAAC,KAAK,CAAC;kBACrBE,cAAc,CAAC,EAAE,CAAC;gBACpB,CAAE;gBACFd,SAAS,EAAC,8EAA8E;gBAAA2D,QAAA,EACzF;cAED;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjE,EAAA,CAjOIP,gBAAgB;AAAA+E,EAAA,GAAhB/E,gBAAgB;AAmOtB,eAAeA,gBAAgB;AAAC,IAAA+E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}