{"ast":null,"code":"// src/utils/notificationUtils.js\nexport const calculateDaysUntilExpiry=expiryDate=>{if(!expiryDate)return null;const today=new Date();const expiry=new Date(expiryDate);const diffTime=expiry-today;const diffDays=Math.ceil(diffTime/(1000*60*60*24));return diffDays;};export const getCertificateExpiryNotifications=(certificates,userEmail)=>{if(!Array.isArray(certificates)){console.error(\"Expected an array of certificates, but got:\",certificates);return[];}const notifications=[];const today=new Date();certificates.forEach(cert=>{if(!cert.expiryDate)return;const daysUntilExpiry=calculateDaysUntilExpiry(cert.expiryDate);// Create notifications for certificates expiring in 30, 14, 7, and 1 days\nif(daysUntilExpiry<=30&&daysUntilExpiry>0){let priority='low';let message='';if(daysUntilExpiry<=1){priority='critical';message=\"Certificate \\\"\".concat(cert.certificate,\"\\\" expires today!\");}else if(daysUntilExpiry<=7){priority='high';message=\"Certificate \\\"\".concat(cert.certificate,\"\\\" expires in \").concat(daysUntilExpiry,\" days\");}else if(daysUntilExpiry<=14){priority='medium';message=\"Certificate \\\"\".concat(cert.certificate,\"\\\" expires in \").concat(daysUntilExpiry,\" days\");}else{priority='low';message=\"Certificate \\\"\".concat(cert.certificate,\"\\\" expires in \").concat(daysUntilExpiry,\" days\");}notifications.push({id:\"cert-expiry-\".concat(cert.id||cert._id),type:'certificate_expiry',priority,message,certificate:cert,daysUntilExpiry,userEmail,createdAt:today.toISOString(),read:false});}else if(daysUntilExpiry<=0){// Certificate has already expired\nnotifications.push({id:\"cert-expired-\".concat(cert.id||cert._id),type:'certificate_expired',priority:'critical',message:\"Certificate \\\"\".concat(cert.certificate,\"\\\" has expired!\"),certificate:cert,daysUntilExpiry,userEmail,createdAt:today.toISOString(),read:false});}});return notifications.sort((a,b)=>{// Sort by priority: critical > high > medium > low\nconst priorityOrder={critical:4,high:3,medium:2,low:1};return priorityOrder[b.priority]-priorityOrder[a.priority];});};export const generateEmailNotification=notification=>{const{certificate,daysUntilExpiry,userEmail}=notification;let subject='';let body='';if(daysUntilExpiry<=0){subject=\"URGENT: Certificate \\\"\".concat(certificate.certificate,\"\\\" has expired\");body=\"\\nDear User,\\n\\nYour certificate \\\"\".concat(certificate.certificate,\"\\\" has expired as of \").concat(certificate.expiryDate,\".\\n\\nCertificate Details:\\n- Certificate Name: \").concat(certificate.certificate,\"\\n- Provider: \").concat(certificate.provider||'N/A',\"\\n- Expiry Date: \").concat(certificate.expiryDate,\"\\n- Status: EXPIRED\\n\\nPlease renew this certificate immediately to maintain compliance.\\n\\nBest regards,\\nHRMS Team\\n    \");}else if(daysUntilExpiry<=7){subject=\"URGENT: Certificate \\\"\".concat(certificate.certificate,\"\\\" expires in \").concat(daysUntilExpiry,\" days\");body=\"\\nDear User,\\n\\nYour certificate \\\"\".concat(certificate.certificate,\"\\\" will expire in \").concat(daysUntilExpiry,\" days.\\n\\nCertificate Details:\\n- Certificate Name: \").concat(certificate.certificate,\"\\n- Provider: \").concat(certificate.provider||'N/A',\"\\n- Expiry Date: \").concat(certificate.expiryDate,\"\\n- Days Remaining: \").concat(daysUntilExpiry,\"\\n\\nPlease take immediate action to renew this certificate.\\n\\nBest regards,\\nHRMS Team\\n    \");}else{subject=\"Reminder: Certificate \\\"\".concat(certificate.certificate,\"\\\" expires in \").concat(daysUntilExpiry,\" days\");body=\"\\nDear User,\\n\\nThis is a reminder that your certificate \\\"\".concat(certificate.certificate,\"\\\" will expire in \").concat(daysUntilExpiry,\" days.\\n\\nCertificate Details:\\n- Certificate Name: \").concat(certificate.certificate,\"\\n- Provider: \").concat(certificate.provider||'N/A',\"\\n- Expiry Date: \").concat(certificate.expiryDate,\"\\n- Days Remaining: \").concat(daysUntilExpiry,\"\\n\\nPlease plan to renew this certificate before it expires.\\n\\nBest regards,\\nHRMS Team\\n    \");}return{to:userEmail,subject,body,type:'certificate_expiry',certificateId:certificate.id||certificate._id};};","map":{"version":3,"names":["calculateDaysUntilExpiry","expiryDate","today","Date","expiry","diffTime","diffDays","Math","ceil","getCertificateExpiryNotifications","certificates","userEmail","Array","isArray","console","error","notifications","forEach","cert","daysUntilExpiry","priority","message","concat","certificate","push","id","_id","type","createdAt","toISOString","read","sort","a","b","priorityOrder","critical","high","medium","low","generateEmailNotification","notification","subject","body","provider","to","certificateId"],"sources":["C:/Users/DELL/Desktop/hrms/frontend/src/utils/notificationUtils.js"],"sourcesContent":["// src/utils/notificationUtils.js\r\nexport const calculateDaysUntilExpiry = (expiryDate) => {\r\n  if (!expiryDate) return null;\r\n  \r\n  const today = new Date();\r\n  const expiry = new Date(expiryDate);\r\n  const diffTime = expiry - today;\r\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n  \r\n  return diffDays;\r\n};\r\n\r\nexport const getCertificateExpiryNotifications = (certificates, userEmail) => {\r\n  if (!Array.isArray(certificates)) {\r\n    console.error(\"Expected an array of certificates, but got:\", certificates);\r\n    return [];\r\n  }\r\n\r\n  const notifications = [];\r\n  const today = new Date();\r\n\r\n  certificates.forEach(cert => {\r\n    if (!cert.expiryDate) return;\r\n\r\n    const daysUntilExpiry = calculateDaysUntilExpiry(cert.expiryDate);\r\n\r\n    // Create notifications for certificates expiring in 30, 14, 7, and 1 days\r\n    if (daysUntilExpiry <= 30 && daysUntilExpiry > 0) {\r\n      let priority = 'low';\r\n      let message = '';\r\n\r\n      if (daysUntilExpiry <= 1) {\r\n        priority = 'critical';\r\n        message = `Certificate \"${cert.certificate}\" expires today!`;\r\n      } else if (daysUntilExpiry <= 7) {\r\n        priority = 'high';\r\n        message = `Certificate \"${cert.certificate}\" expires in ${daysUntilExpiry} days`;\r\n      } else if (daysUntilExpiry <= 14) {\r\n        priority = 'medium';\r\n        message = `Certificate \"${cert.certificate}\" expires in ${daysUntilExpiry} days`;\r\n      } else {\r\n        priority = 'low';\r\n        message = `Certificate \"${cert.certificate}\" expires in ${daysUntilExpiry} days`;\r\n      }\r\n\r\n      notifications.push({\r\n        id: `cert-expiry-${cert.id || cert._id}`,\r\n        type: 'certificate_expiry',\r\n        priority,\r\n        message,\r\n        certificate: cert,\r\n        daysUntilExpiry,\r\n        userEmail,\r\n        createdAt: today.toISOString(),\r\n        read: false\r\n      });\r\n    } else if (daysUntilExpiry <= 0) {\r\n      // Certificate has already expired\r\n      notifications.push({\r\n        id: `cert-expired-${cert.id || cert._id}`,\r\n        type: 'certificate_expired',\r\n        priority: 'critical',\r\n        message: `Certificate \"${cert.certificate}\" has expired!`,\r\n        certificate: cert,\r\n        daysUntilExpiry,\r\n        userEmail,\r\n        createdAt: today.toISOString(),\r\n        read: false\r\n      });\r\n    }\r\n  });\r\n\r\n  return notifications.sort((a, b) => {\r\n    // Sort by priority: critical > high > medium > low\r\n    const priorityOrder = { critical: 4, high: 3, medium: 2, low: 1 };\r\n    return priorityOrder[b.priority] - priorityOrder[a.priority];\r\n  });\r\n};\r\n\r\nexport const generateEmailNotification = (notification) => {\r\n  const { certificate, daysUntilExpiry, userEmail } = notification;\r\n  \r\n  let subject = '';\r\n  let body = '';\r\n  \r\n  if (daysUntilExpiry <= 0) {\r\n    subject = `URGENT: Certificate \"${certificate.certificate}\" has expired`;\r\n    body = `\r\nDear User,\r\n\r\nYour certificate \"${certificate.certificate}\" has expired as of ${certificate.expiryDate}.\r\n\r\nCertificate Details:\r\n- Certificate Name: ${certificate.certificate}\r\n- Provider: ${certificate.provider || 'N/A'}\r\n- Expiry Date: ${certificate.expiryDate}\r\n- Status: EXPIRED\r\n\r\nPlease renew this certificate immediately to maintain compliance.\r\n\r\nBest regards,\r\nHRMS Team\r\n    `;\r\n  } else if (daysUntilExpiry <= 7) {\r\n    subject = `URGENT: Certificate \"${certificate.certificate}\" expires in ${daysUntilExpiry} days`;\r\n    body = `\r\nDear User,\r\n\r\nYour certificate \"${certificate.certificate}\" will expire in ${daysUntilExpiry} days.\r\n\r\nCertificate Details:\r\n- Certificate Name: ${certificate.certificate}\r\n- Provider: ${certificate.provider || 'N/A'}\r\n- Expiry Date: ${certificate.expiryDate}\r\n- Days Remaining: ${daysUntilExpiry}\r\n\r\nPlease take immediate action to renew this certificate.\r\n\r\nBest regards,\r\nHRMS Team\r\n    `;\r\n  } else {\r\n    subject = `Reminder: Certificate \"${certificate.certificate}\" expires in ${daysUntilExpiry} days`;\r\n    body = `\r\nDear User,\r\n\r\nThis is a reminder that your certificate \"${certificate.certificate}\" will expire in ${daysUntilExpiry} days.\r\n\r\nCertificate Details:\r\n- Certificate Name: ${certificate.certificate}\r\n- Provider: ${certificate.provider || 'N/A'}\r\n- Expiry Date: ${certificate.expiryDate}\r\n- Days Remaining: ${daysUntilExpiry}\r\n\r\nPlease plan to renew this certificate before it expires.\r\n\r\nBest regards,\r\nHRMS Team\r\n    `;\r\n  }\r\n  \r\n  return {\r\n    to: userEmail,\r\n    subject,\r\n    body,\r\n    type: 'certificate_expiry',\r\n    certificateId: certificate.id || certificate._id\r\n  };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}